{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 9;}
{\s50\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext51 List Continue 0;}
{\s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext52 List Continue 1;}
{\s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext53 List Continue 2;}
{\s53\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext54 List Continue 3;}
{\s54\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext55 List Continue 4;}
{\s55\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext56 List Continue 5;}
{\s56\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext57 List Continue 6;}
{\s57\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext58 List Continue 7;}
{\s58\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 8;}
{\s59\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 9;}
{\s60\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext61 DescContinue 0;}
{\s61\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext62 DescContinue 1;}
{\s62\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext63 DescContinue 2;}
{\s63\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext64 DescContinue 3;}
{\s64\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext65 DescContinue 4;}
{\s65\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext66 DescContinue 5;}
{\s66\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext67 DescContinue 6;}
{\s67\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext68 DescContinue 7;}
{\s68\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 8;}
{\s69\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 9;}
{\s70\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext81 LatexTOC 0;}
{\s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext82 LatexTOC 1;}
{\s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext83 LatexTOC 2;}
{\s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext84 LatexTOC 3;}
{\s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext85 LatexTOC 4;}
{\s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext86 LatexTOC 5;}
{\s76\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext87 LatexTOC 6;}
{\s77\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext88 LatexTOC 7;}
{\s78\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 8;}
{\s79\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 9;}
{\s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext81 \sautoupd List Bullet 0;}
{\s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid \sbasedon0 \snext82 \sautoupd List Bullet 1;}
{\s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid \sbasedon0 \snext83 \sautoupd List Bullet 2;}
{\s83\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls4\adjustright \fs20\cgrid \sbasedon0 \snext84 \sautoupd List Bullet 3;}
{\s84\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls5\adjustright \fs20\cgrid \sbasedon0 \snext85 \sautoupd List Bullet 4;}
{\s85\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls6\adjustright \fs20\cgrid \sbasedon0 \snext86 \sautoupd List Bullet 5;}
{\s86\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls7\adjustright \fs20\cgrid \sbasedon0 \snext87 \sautoupd List Bullet 6;}
{\s87\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls8\adjustright \fs20\cgrid \sbasedon0 \snext88 \sautoupd List Bullet 7;}
{\s88\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls9\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 8;}
{\s89\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls10\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 9;}
{\s90\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext91 \sautoupd List Enum 0;}
{\s91\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext92 \sautoupd List Enum 1;}
{\s92\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext93 \sautoupd List Enum 2;}
{\s93\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext94 \sautoupd List Enum 3;}
{\s94\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext95 \sautoupd List Enum 4;}
{\s95\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s96\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s97\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext98 \sautoupd List Enum 7;}
{\s98\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 8;}
{\s99\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 9;}
}
{\info 
{\title {\comment Trabalho de PTP  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1.0 \par
}}Trabalho de PTP}
{\comment Gerado porDoxgyen. }
{\creatim \yr2015\mo12\dy3\hr15\min0\sec25}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt Trabalho de PTP}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Vers\'E3o 1.0\par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt Quinta, 3 de Dezembro de 2015 }}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Conte\'FAdo\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Processador de Imagens\par \pard\plain 
{\tc \v Processador de Imagens}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Autor:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Elton de Souza Vieira \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Data:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 2015 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Vers\'E3o:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 1.0 \par
}}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice das Estruturas de Dados\par \pard\plain 
{\tc \v \'CDndice das Estruturas de Dados}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Estruturas de Dados\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Aqui est\'E3o as estruturas de dados, uni\'F5es e suas respectivas descri\'E7\'F5es:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b Pixel} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice dos Arquivos\par \pard\plain 
{\tc \v \'CDndice dos Arquivos}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lista de Arquivos\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Esta \'E9 a lista de todos os arquivos documentados e suas respectivas descri\'E7\'F5es:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b main.c} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Arquivo principal })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b libs/{\b functions.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Arquivo com fun\'E7\'F5es de manipula\'E7\'E3o da imagem })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b libs/{\b global.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Arquivo com as vari\'E1veis globais })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b libs/{\b headers.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Arquivo com os prot\'F3tipos das fun\'E7\'F5es })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b libs/{\b img_manip.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Arquivo com as fun\'E7\'F5es principais do programa })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b libs/{\b visual.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Arquivo com fun\'E7\'F5es apenas de impress\'E3o na tela })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Estruturas{\tc \v Estruturas}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Estrutura Pixel\par \pard\plain 
{\tc\tcl2 \v Pixel}
{\xe \v Pixel}
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
\par
{
{\f2 #include <global.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campos de Dados\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b r}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b g}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b b}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o Detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Struct para armazenar as cores (em RGB) de um pixel. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Campos\par
\pard\plain 
{\xe \v b\:Pixel}
{\xe \v Pixel\:b}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Pixel::b}}
\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Armazena a quantidade de azul (b) da cor. \par
}}
{\xe \v g\:Pixel}
{\xe \v Pixel\:g}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Pixel::g}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Armazena a quantidade de verde (g) da cor. \par
}}
{\xe \v r\:Pixel}
{\xe \v Pixel\:r}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Pixel::r}}
\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Armazena a quantidade de vermelho (r) da cor. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para esta estrutura foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
libs/{\b global.h}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Arquivos{\tc \v Arquivos}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo libs/functions.h\par \pard\plain 
{\tc\tcl2 \v libs/functions.h}
{\xe \v libs/functions.h}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Arquivo com fun\'E7\'F5es de manipula\'E7\'E3o da imagem. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b copy_img} ({\b Pixel} origin[{\b MAX}][{\b MAX}], {\b Pixel} destiny[{\b MAX}][{\b MAX}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b build_img} (char file[], {\b Pixel} img[{\b MAX}][{\b MAX}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b img_thresholding} ({\b Pixel} img[{\b MAX}][{\b MAX}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b img_blurring} ({\b Pixel} img[{\b MAX}][{\b MAX}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b img_sharpening} ({\b Pixel} img[{\b MAX}][{\b MAX}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b img_rot_left} ({\b Pixel} img[{\b MAX}][{\b MAX}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b img_rot_right} ({\b Pixel} img[{\b MAX}][{\b MAX}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b img_rot_180} ({\b Pixel} img[{\b MAX}][{\b MAX}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b img_amp} (char file[], int zoom, {\b Pixel} img[{\b MAX}][{\b MAX}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b img_red} (char file[], int zoom, {\b Pixel} img[{\b MAX}][{\b MAX}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b img_info} ({\b Pixel} img[{\b MAX}][{\b MAX}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b img_emboss} ({\b Pixel} img[{\b MAX}][{\b MAX}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b img_posterize} ({\b Pixel} img[{\b MAX}][{\b MAX}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b img_grayscale} ({\b Pixel} img[{\b MAX}][{\b MAX}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b img_negative} ({\b Pixel} img[{\b MAX}][{\b MAX}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b img_invert_h} ({\b Pixel} img[{\b MAX}][{\b MAX}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b img_invert_v} ({\b Pixel} img[{\b MAX}][{\b MAX}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b img_reflect_h} ({\b Pixel} img[{\b MAX}][{\b MAX}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b img_reflect_v} ({\b Pixel} img[{\b MAX}][{\b MAX}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b img_compress} (char file[], {\b Pixel} img[{\b MAX}][{\b MAX}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b img_uncompress} (char file[])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o Detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Arquivo com fun\'E7\'F5es de manipula\'E7\'E3o da imagem. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Arquivo com todas as fun\'E7\'F5es de filtro e manipula\'E7\'E3o da imagem. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v build_img\:functions.h}
{\xe \v functions.h\:build_img}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void build_img (char  {\i file}[], {\b Pixel}  {\i img}[MAX][MAX])}}
\par
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para criar a imagem\par
Fun\'E7\'E3o que gera uma imagem ppm a partir de uma matriz de Pixels\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file} \cell }{- Nome do arquivo de sa\'EDda \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i img} \cell }{- Matriz da imagem a ser gerada \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    26                                                 \{\par
   37     strcat(strcat(strcat(file, "_"), op), ".ppm");\par
   38 \par
   39     // Cria uma vari\'E1vel do tipo arquivo\par
   40     FILE *img_f;\par
   41     // Cria um arquivo com o nome do arquivo + '_' + opera\'E7\'E3o escolhida\par
   42     img_f = fopen(file, "w");\par
   43 \par
   44     // Cria o cabe\'E7alho da imagem ppm\par
   45     fprintf(img_f, "%s\\n", header);\par
   46     // Define a largura e altura da imagem\par
   47     fprintf(img_f, "%i %i\\n", w, h);\par
   48     // Define a cor m\'E1ximo (qualidade) da imagem\par
   49     fprintf(img_f, "%i\\n", comp);\par
   50 \par
   51     for (i = 0; i < h; i++)\par
   52         for (j = 0; j < w; j++)\par
   53             // Trata erros b\'E1sicos, como de cor negativa e/ou maior que o m\'E1ximo.\par
   54             fprintf(img_f, "%i %i %i\\n",\par
   55             (img[i][j].r > comp) ? comp : (img[i][j].r < 0) ? 0 : img[i][j].r,\par
   56             (img[i][j].g > comp) ? comp : (img[i][j].g < 0) ? 0 : img[i][j].g,\par
   57             (img[i][j].b > comp) ? comp : (img[i][j].b < 0) ? 0 : img[i][j].b);\par
   58 \par
   59     // Fecha o arquivo aberto\par
   60     fclose(img_f);\par
   61 \}\par
}
}
{\xe \v copy_img\:functions.h}
{\xe \v functions.h\:copy_img}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void copy_img ({\b Pixel}  {\i origin}[MAX][MAX], {\b Pixel}  {\i destiny}[MAX][MAX])}}
\par
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para copiar a matriz da imagem\par
Fun\'E7\'E3o que copia uma imagem de uma matriz para outra atrav\'E9s da passagem de par\'E2metros por refer\'EAncia\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i origin} \cell }{- Imagem a ser copiada \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i destiny} \cell }{- Imagem para onde ser\'E1 copiada \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     9                                                                \{\par
   21     for (i = 0; i < h; i++)\par
   22         for (j = 0; j < w; j++)\par
   23             destiny[i][j] = origin[i][j];\par
   24 \}\par
}
}
{\xe \v img_amp\:functions.h}
{\xe \v functions.h\:img_amp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void img_amp (char  {\i file}[], int  {\i zoom}, {\b Pixel}  {\i img}[MAX][MAX])}}
\par
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o de amplia\'E7\'E3o da imagem\par
Para ampliar uma imagem n vezes, devemos repetir cada pixel n vezes horizontalmente e tamb\'E9m cada linha n vezes.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file} \cell }{- Nome do arquivo de sa\'EDda \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i zoom} \cell }{- Zoom de amplia\'E7\'E3o da imagem \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i img} \cell }{- Matriz da imagem a ser ampliada \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   227                                                          \{\par
  241     // Iteradores\par
  242     int k, l;\par
  243 \par
  244     strcat(file, "_amp.ppm");\par
  245 \par
  246     // Cria uma vari\'E1vel do tipo arquivo\par
  247     FILE *img_f;\par
  248     // Cria um arquivo com o nome do arquivo + '_amp.ppm'\par
  249     img_f = fopen(file, "w");\par
  250 \par
  251     // Cria o cabe\'E7alho da imagem ppm\par
  252     fprintf(img_f, "%s\\n", header);\par
  253     // Define as novas largura e altura da imagem (multiplicadas pelo zoom)\par
  254     fprintf(img_f, "%i %i\\n", w*zoom, h*zoom);\par
  255     // Define a cor m\'E1ximo (qualidade) da imagem\par
  256     fprintf(img_f, "%i\\n", comp);\par
  257     for (i = 0; i < h; i++)\par
  258         for (k = 0; k < zoom; k++)\par
  259             for (j = 0; j < w; j++)\par
  260                 for (l = 0; l < zoom; l++)\par
  261                     // Trata erros b\'E1sicos, como de cor negativa e/ou maior que o m\'E1ximo.\par
  262                     fprintf(img_f, "%i %i %i\\n",\par
  263                     (img[i][j].r > comp) ? comp : img[i][j].r,\par
  264                     (img[i][j].g > comp) ? comp : img[i][j].g,\par
  265                     (img[i][j].b > comp) ? comp : img[i][j].b);\par
  266 \par
  267     // Fecha o arquivo aberto\par
  268     fclose(img_f);\par
  269 \}\par
}
}
{\xe \v img_blurring\:functions.h}
{\xe \v functions.h\:img_blurring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void img_blurring ({\b Pixel}  {\i img}[MAX][MAX])}}
\par
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o de blurring\par
Desfoca a imagem atribuindo o valor da m\'E9dia do pixel (i, j) e todos os 8 pixels ao redor.\par
 Seguindo a matriz:\par
 | 1 \~ 1 \~ 1 | \par
 | 1 \~ 1 \~ 1 | * 1/9 \par
 | 1 \~ 1 \~ 1 |\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i img} \cell }{- Matriz da imagem a ser alterada \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    98                                        \{\par
  113     // Cria uma matriz para armazenar a imagem original temporariamente\par
  114     Pixel tmp[MAX][MAX];\par
  115 \par
  116     // Copia a imagem original para a tempor\'E1ria\par
  117     copy_img(img, tmp);\par
  118 \par
  119     for (i = 1; i < h - 1; i++)\par
  120         for (j = 1; j < w - 1; j++)\par
  121             img[i][j].r = (tmp[i-1][j-1].r + tmp[i-1][j].r + tmp[i-1][j+1].r +\par
  122                            tmp[i][j-1].r + tmp[i][j].r + tmp[i][j+1].r +\par
  123                            tmp[i+1][j-1].r + tmp[i+1][j].r + tmp[i+1][j+1].r)/9,\par
  124             img[i][j].g = (tmp[i-1][j-1].g + tmp[i-1][j].g + tmp[i-1][j+1].g +\par
  125                            tmp[i][j-1].g + tmp[i][j].g + tmp[i][j+1].g +\par
  126                            tmp[i+1][j-1].g + tmp[i+1][j].g + tmp[i+1][j+1].g)/9,\par
  127             img[i][j].b = (tmp[i-1][j-1].b + tmp[i-1][j].b + tmp[i-1][j+1].b +\par
  128                            tmp[i][j-1].b + tmp[i][j].b + tmp[i][j+1].b +\par
  129                            tmp[i+1][j-1].b + tmp[i+1][j].b + tmp[i+1][j+1].b)/9;\par
  130 \}\par
}
}
{\xe \v img_compress\:functions.h}
{\xe \v functions.h\:img_compress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void img_compress (char  {\i file}[], {\b Pixel}  {\i img}[MAX][MAX])}}
\par
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para comprimir a imagem\par
Essa fun\'E7\'E3o comprime a imagem utilizando o algoritmo RLE (Run-Length Encoding), que verifica o n\'FAmero de pixels (rgb) repetidos sequencialmente e cria uma nova imagem com a estrutura n (r g b), no qual n representa o n\'FAmero de vezes que esse pixel est\'E1 repetido sequencialmente.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file} \cell }{- Nome do arquivo de sa\'EDda \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i img} \cell }{- Matriz da imagem a ser comprimida \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   554                                                     \{\par
  570     // Cria a vari\'E1vel para contar as repeti\'E7\'F5es (iniciada com 0)\par
  571     int cont = 0;\par
  572     // Cria duas vari\'E1veis do tipo pixel para compara\'E7\'E3o, sendo\par
  573     // a primeira inicializada com o primeiro pixel da imagem\par
  574     Pixel t1 = img[0][0], t2;\par
  575 \par
  576     strcat(file, "_compressed.ppm");\par
  577 \par
  578     // Cria uma vari\'E1vel do tipo arquivo\par
  579     FILE *img_f;\par
  580     // Cria um arquivo com o nome do arquivo + '_compressed.ppm'\par
  581     img_f = fopen(file, "w");\par
  582 \par
  583     // Cria o cabe\'E7alho da imagem ppm\par
  584     fprintf(img_f, "%s\\n", header);\par
  585     // Define a largura e altura da imagem\par
  586     fprintf(img_f, "%i %i\\n", w, h);\par
  587     // Define a cor m\'E1ximo (qualidade) da imagem e p\'F5e um c,\par
  588     // para indicar que o arquivo est\'E1 comprimido\par
  589     fprintf(img_f, "%ic\\n", comp);\par
  590 \par
  591     for (i = 0; i < h; i++)\par
  592         for (j = 0; j < w; j++)\{\par
  593             // Atribui a t2 o conte\'FAdo do "pixel atual" da leitura\par
  594             t2 = img[i][j];\par
  595             if (t1.r == t2.r && t1.g == t2.g && t1.b == t2.b && !(i == h-1 && j == w-1)) \{\par
  596                 // Se todos os componentes (rgb) de t2 forem iguais aos de t1 (pixel anterior)\par
  597                 // e o pixel (i, j) n\'E3o for o \'FAltimo pixel da imagem,\par
  598                 // Incrementa o contador e pula para o pr\'F3ximo pixel (continue)\par
  599                 cont++;\par
  600                 continue;\par
  601             \}\par
  602             if (t1.r == t2.r && t1.g == t2.g && t1.b == t2.b && i == h-1 && j == w-1)\par
  603                 // Se todos os componentes (rgb) de t2 forem iguais aos de t1 (pixel anterior)\par
  604                 // e o pixel (i, j) for o \'FAltimo pixel da imagem, incrementa o contador\par
  605                 cont++;\par
  606             // Escreve no arquivo o valor do contador, seguido dos valores\par
  607             // dos componentes do pixel (que foi repetido contador vezes)\par
  608             fprintf(img_f, "%i(%i %i %i)\\n", cont, t1.r, t1.g, t1.b);\par
  609             // O pixel anterior (de compara\'E7\'E3o) recebe o pixel atual (que\par
  610             // \'E9 diferente do anterior, pois a imagem foi escrita) e a\par
  611             // vari\'E1vel de contador recebe 1 (justamente o pixel t2)\par
  612             t1 = t2, cont = 1;\par
  613         \}\par
  614 \par
  615     // Fecha o arquivo aberto\par
  616     fclose(img_f);\par
  617 \}\par
}
}
{\xe \v img_emboss\:functions.h}
{\xe \v functions.h\:img_emboss}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void img_emboss ({\b Pixel}  {\i img}[MAX][MAX])}}
\par
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para deixar a imagem com o efeito de Alto Relevo\par
Esse filtro pega o valor de uma posi\'E7\'E3o (i + 1, j) e subtrai do valor da posi\'E7\'E3o oposta (i - 1, j), substiruindo no valor central (i, j) e somando com a metade do componente para clareamento. \par
 Seguindo a matriz: \par
 | 0 \~-1 \~ 0 | \par
 | 0 \~ 0 \~ 0 | + component/2 \par
 | 0 \~ 1 \~ 0 |\par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   358                                      \{\par
  371     // Cria uma matriz para armazenar a imagem original temporariamente\par
  372     Pixel tmp[MAX][MAX];\par
  373 \par
  374     // Copia a imagem original para a tempor\'E1ria\par
  375     copy_img(img, tmp);\par
  376 \par
  377     for (i = 1; i < h - 1; i++)\par
  378         for (j = 0; j < w; j++)\par
  379             // Percorre cada elemento do array img e atribui \'E0 matriz\par
  380             // tempor\'E1ria o valor do algoritmo de alto relevo.\par
  381             tmp[i][j].r = img[i+1][j].r - img[i-1][j].r + comp/2,\par
  382             tmp[i][j].g = img[i+1][j].g - img[i-1][j].g + comp/2,\par
  383             tmp[i][j].b = img[i+1][j].b - img[i-1][j].b + comp/2;\par
  384 \par
  385     // Copia a matriz tempor\'E1ria para a matriz da imagem original\par
  386     copy_img(tmp, img);\par
  387 \}\par
}
}
{\xe \v img_grayscale\:functions.h}
{\xe \v functions.h\:img_grayscale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void img_grayscale ({\b Pixel}  {\i img}[MAX][MAX])}}
\par
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para deixar a imagem em preto e branco\par
Essa fun\'E7\'E3o l\'EA cada pixel da imagem, faz a m\'E9dia entre os componentes (rgb) e atribui o valor da m\'E9dia a cada um dos componentes, deixando a imagem em preto e branco.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i img} \cell }{- Matriz da imagem a ser alterada \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   410                                         \{\par
  423     // Vari\'E1vel para armazenar a m\'E9dia dos componentes\par
  424     int pb;\par
  425 \par
  426     for (i = 0; i < h; i++)\par
  427         for (j = 0; j < w; j++)\par
  428             // Faz o c\'E1lculo da m\'E9dia\par
  429             pb = (img[i][j].r + img[i][j].g + img[i][j].b)/3,\par
  430             // Atribui o valor da m\'E9dia a cada um dos componentes\par
  431             img[i][j].r = pb,\par
  432             img[i][j].g = pb,\par
  433             img[i][j].b = pb;\par
  434 \}\par
}
}
{\xe \v img_info\:functions.h}
{\xe \v functions.h\:img_info}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void img_info ({\b Pixel}  {\i img}[MAX][MAX])}}
\par
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para mostrar informa\'E7\'F5es b\'E1sicas da imagem\par
Fun\'E7\'E3o que mostra informa\'E7\'F5es sobre a imagem lida Tipo do cabe\'E7alho, largura, altura e cor m\'E1xima\par
Obs: As cores de cada pixel foram comentadas para evitar um la\'E7o muito extenso em imagens grandes\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i img} \cell }{- Matriz da imagem a ser lida \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   328                                    \{\par
  342     printf("Dados da Imagem lida:\\n");\par
  343     // Mostra o cabe\'E7alho da imagem\par
  344     printf("Tipo: %s\\n", header);\par
  345     // Mostra o tamanho da imagem (largura x altura)\par
  346     printf("Tamanho: %ix%i\\n", w, h);\par
  347     // Mostra a cor m\'E1xima da imagem (qualidade)\par
  348     printf("Cor m\'E1xima: %i\\n", comp);\par
  349 \par
  350     /*\par
  351     printf("Cores de cada pixel:\\n");\par
  352     for (i = 0; i < h; i++)\par
  353         for (j = 0; j < w; j++)\par
  354             printf("%i %i %i\\n", img[i][j].r, img[i][j].g, img[i][j].b);\par
  355     */\par
  356 \}\par
}
}
{\xe \v img_invert_h\:functions.h}
{\xe \v functions.h\:img_invert_h}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void img_invert_h ({\b Pixel}  {\i img}[MAX][MAX])}}
\par
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para inverter a imagem horizontalmente (flip)\par
Para inverter a imagem horizontalmente, foi utilizado uma matriz auxiliar (para armazenar a imagem original) e depois atribui a cada pixel n de cada linha da imagem original o valor do pixel largura - n - 1 (-1 pois a matriz vai de 0 at\'E9 n-1).\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i img} \cell }{- Matriz da imagem a ser invertida horizontalmente \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   456                                        \{\par
  470     // Cria a matriz para a imagem auxiliar\par
  471     Pixel tmp[MAX][MAX];\par
  472 \par
  473     // Copia a imagem original para a matriz auxiliar\par
  474     copy_img(img, tmp);\par
  475 \par
  476     for (i = 0; i < h; i++)\par
  477         for (j = 0; j < w; j++)\par
  478             // Atribui \'E0 imagem original (i, largura-j-1)\par
  479             // o valor da imagem auxiliar (i, j)\par
  480             img[i][w-j-1] = tmp[i][j];\par
  481 \}\par
}
}
{\xe \v img_invert_v\:functions.h}
{\xe \v functions.h\:img_invert_v}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void img_invert_v ({\b Pixel}  {\i img}[MAX][MAX])}}
\par
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para inverter a imagem verticalmente (flip)\par
Para inverter a imagem veticalmente, foi utilizado uma matriz auxiliar (para armazenar a imagem original) e depois atribui a cada pixel n de cada coluna da imagem original o valor do pixel altura - n - 1 (-1 pois a matriz vai de 0 at\'E9 n-1).\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i img} \cell }{- Matriz da imagem a ser invertida veticalmente \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   483                                        \{\par
  497     // Cria a matriz para a imagem auxiliar\par
  498     Pixel tmp[MAX][MAX];\par
  499 \par
  500     // Copia a imagem original para a matriz auxiliar\par
  501     copy_img(img, tmp);\par
  502 \par
  503     for (i = 0; i < h; i++)\par
  504         for (j = 0; j < w; j++)\par
  505             // Atribui \'E0 imagem original (altura - i - 1, j)\par
  506             // o valor da imagem auxiliar (i, j)\par
  507             img[h-i-1][j] = tmp[i][j];\par
  508 \}\par
}
}
{\xe \v img_negative\:functions.h}
{\xe \v functions.h\:img_negative}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void img_negative ({\b Pixel}  {\i img}[MAX][MAX])}}
\par
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para inverter as cores da imagem (negativo)\par
Essa fun\'E7\'E3o l\'EA cada pixel da imagem, e inverte a sua cor (se era branco, fica preto...) aplicando ao pixel o valor de comp menos o valor original.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i img} \cell }{- Matriz da imagem a ser alterada \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   436                                        \{\par
  448     for (i = 0; i < h; i++)\par
  449         for (j = 0; j < w; j++)\par
  450             // L\'EA cada pixel da imagem e executa o algoritmo\par
  451             img[i][j].r = comp-img[i][j].r,\par
  452             img[i][j].g = comp-img[i][j].g,\par
  453             img[i][j].b = comp-img[i][j].b;\par
  454 \}\par
}
}
{\xe \v img_posterize\:functions.h}
{\xe \v functions.h\:img_posterize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void img_posterize ({\b Pixel}  {\i img}[MAX][MAX])}}
\par
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para posterizar a imagem\par
Fun\'E7\'E3o que l\'EA cada componente (rgb) da cor da imagem e o altera para o seu extremo (se for menor que comp/2, vira 0, caso contr\'E1rio, recebe o valor de comp).\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i img} \cell }{- Matriz da imagem a ser alterada \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   389                                         \{\par
  402     for (i = 0; i < h; i++)\par
  403         for (j = 0; j < w; j++)\par
  404             // L\'EA cada elemento da imagem e aplica o algoritmo\par
  405             img[i][j].r = (img[i][j].r > comp/2) ? comp: 0,\par
  406             img[i][j].g = (img[i][j].g > comp/2) ? comp: 0,\par
  407             img[i][j].b = (img[i][j].b > comp/2) ? comp: 0;\par
  408 \}\par
}
}
{\xe \v img_red\:functions.h}
{\xe \v functions.h\:img_red}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void img_red (char  {\i file}[], int  {\i zoom}, {\b Pixel}  {\i img}[MAX][MAX])}}
\par
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o de redu\'E7\'E3o da imagem\par
Para reduzir uma imagem n vezes (sendo n|h e n|w), devemos atribuir \'E0 cada novo pixel da nova imagem a m\'E9dia dos pixels de subimagens de tamanho n x n da imagem original.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file} \cell }{- Nome do arquivo de sa\'EDda \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i zoom} \cell }{- Zoom de redu\'E7\'E3o da imagem \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i img} \cell }{- Matriz da imagem a ser reduzida \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   271                                                          \{\par
  286     // Iteradores\par
  287     int k, l;\par
  288     // Vari\'E1vel para armazenar o valor da \'E1rea das subimagens\par
  289     int area = zoom*zoom;\par
  290     // Pixel para salvar o valor da soma dos pixels da subimagem\par
  291     Pixel sum = \{0, 0, 0\};\par
  292 \par
  293     strcat(file, "_red.ppm");\par
  294 \par
  295     // Cria uma vari\'E1vel do tipo arquivo\par
  296     FILE *img_f;\par
  297     // Cria um arquivo com o nome do arquivo + '_red.ppm'\par
  298     img_f = fopen(file, "w");\par
  299 \par
  300     // Cria o cabe\'E7alho da imagem ppm\par
  301     fprintf(img_f, "%s\\n", header);\par
  302     // Define as novas largura e altura da imagem (divididas pelo zoom)\par
  303     fprintf(img_f, "%i %i\\n", w/zoom, h/zoom);\par
  304     // Define a cor m\'E1ximo (qualidade) da imagem\par
  305     fprintf(img_f, "%i\\n", comp);\par
  306 \par
  307     for (i = 0; i <= h-zoom; i += zoom)\par
  308         for (j = 0; j <= w-zoom; j += zoom, sum.r = 0, sum.g = 0, sum.b = 0) \{\par
  309             for (k = 0; k < zoom; k++)\par
  310                 for (l = 0; l < zoom; l++)\par
  311                     // Soma \'E0 sum o valor das cores de cada pixel da subimagem\par
  312                     sum.r += img[i+k][j+l].r,\par
  313                     sum.g += img[i+k][j+l].g,\par
  314                     sum.b += img[i+k][j+l].b;\par
  315             // Salva no arquivo o valor de cada pixel de soma dividido pela \'E1rea\par
  316             fprintf(img_f, "%i %i %i\\n",\par
  317             (sum.r/area > comp) ? comp : sum.r/area,\par
  318             (sum.g/area > comp) ? comp : sum.g/area,\par
  319             (sum.b/area > comp) ? comp : sum.b/area);\par
  320         \}\par
  321 \par
  322     // Fecha o arquivo aberto\par
  323     fclose(img_f);\par
  324 \}\par
}
}
{\xe \v img_reflect_h\:functions.h}
{\xe \v functions.h\:img_reflect_h}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void img_reflect_h ({\b Pixel}  {\i img}[MAX][MAX])}}
\par
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para refletir a imagem horizontalmente\par
Essa fun\'E7\'E3o faz com que a imagem fique espelhada horizontalmente, isto \'E9, a imagem \'E9 "normal" at\'E9 a sua metade (horizontal), quando come\'E7a a repetir a imagem, s\'F3 que invertida, criando o efeito de ter colocado um espelho no meio da imagem.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i img} \cell }{- Matriz da imagem a ser refletida horizontalmente \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   510                                         \{\par
  523     for (i = 0; i < h; i++)\par
  524         for (j = 0; j < w; j++)\par
  525             // Atribui a cada elemento (i, largura - j - 1)\par
  526             // o seu "correspondente" (i, j) da imagem\par
  527             img[i][w-j-1] = img[i][j];\par
  528 \}\par
}
}
{\xe \v img_reflect_v\:functions.h}
{\xe \v functions.h\:img_reflect_v}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void img_reflect_v ({\b Pixel}  {\i img}[MAX][MAX])}}
\par
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para refletir a imagem verticalmente\par
Essa fun\'E7\'E3o faz com que a imagem fique espelhada verticalmente, isto \'E9, a imagem \'E9 "normal" at\'E9 a sua metade (vertical), quando come\'E7a a ser repetida, s\'F3 que invertida, criando o efeito de ter colocado um espelho no meio da imagem.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i img} \cell }{- Matriz da imagem a ser refletida verticalmente \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   530                                         \{\par
  543     for (i = 0; i < h; i++)\par
  544         for (j = 0; j < w; j++)\par
  545             // Atribui a cada elemento (altura - i - 1, j)\par
  546             // o seu "correspondente" (i, j) da imagem\par
  547             img[h-i-1][j] = img[i][j];\par
  548 \}\par
}
}
{\xe \v img_rot_180\:functions.h}
{\xe \v functions.h\:img_rot_180}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void img_rot_180 ({\b Pixel}  {\i img}[MAX][MAX])}}
\par
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o de rota\'E7\'E3o em 180\'BA\par
Para rotacionar uma imagem em 180\'BA, poder\'EDamos aplicar duas vezes o algoritmo de rota\'E7\'E3o para a esquerda (ou para a direita), no entanto, n\'E3o h\'E1 essa necessidade, pois uma imagem rotacionada em 180\'BA nada mais \'E9 do que uma imagem invertida horizontalmente e verticalmente ao mesmo tempo (flip_h + flip_v). E \'E9 isso que essa fun\'E7\'E3o faz.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i img} \cell }{- Matriz da imagem a ser alterada \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   206                                       \{\par
  221     // Inverte a imagem verticalmente (flip vertical)\par
  222     img_invert_v(img);\par
  223     // Inverte a imagem horizontalmente (flip horizontal)\par
  224     img_invert_h(img);\par
  225 \}\par
}
}
{\xe \v img_rot_left\:functions.h}
{\xe \v functions.h\:img_rot_left}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void img_rot_left ({\b Pixel}  {\i img}[MAX][MAX])}}
\par
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o de rota\'E7\'E3o em 90\'BA para a esquerda\par
Faz a transposta da matriz da imagem e espelha verticalmente\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i img} \cell }{- Matriz da imagem a ser alterada \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   160                                        \{\par
  170     int aux;\par
  171 \par
  172     // Cria uma matriz para armazenar a imagem original temporariamente\par
  173     Pixel tmp[MAX][MAX];\par
  174 \par
  175     // Copia a imagem original para a tempor\'E1ria\par
  176     copy_img(img, tmp);\par
  177 \par
  178     for (i = 0; i < h; i++)\par
  179         for (j = 0; j < w; j++)\par
  180             img[w-j-1][i] = tmp[i][j];\par
  181 \par
  182     // Faz o swap entre h e w, pois ao rotacionar, a altura troca com a largura\par
  183     aux = h, h = w, w = aux;\par
  184 \}\par
}
}
{\xe \v img_rot_right\:functions.h}
{\xe \v functions.h\:img_rot_right}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void img_rot_right ({\b Pixel}  {\i img}[MAX][MAX])}}
\par
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o de rota\'E7\'E3o em 90\'BA para a direita\par
Se considerarmos o \'E2ngulo de rota\'E7\'E3o para esquerda como x, o \'E2ngulo de rota\'E7\'E3o para esquerda se d\'E1 por x + 180\'BA, portanto, para rotacionar a imagem para esquerda, podemos rotacion\'E1-la para esquerda uma vez e depois rotacionar em 180\'BA. E \'E9 isso que essa fun\'E7\'E3o faz.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i img} \cell }{- Matriz da imagem a ser alterada \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   186                                         \{\par
  200     // Rotaciona a imagem original 1 vez para a esquerda\par
  201     img_rot_left(img);\par
  202     // Rotaciona a imagem original em 180\'BA\par
  203     img_rot_180(img);\par
  204 \}\par
}
}
{\xe \v img_sharpening\:functions.h}
{\xe \v functions.h\:img_sharpening}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void img_sharpening ({\b Pixel}  {\i img}[MAX][MAX])}}
\par
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o de sharpening\par
Aumenta a clareza de detalhes da imagem subtraindo de 5x o pixel (i, j) cada um dos 4 pixels laterais.\par
 Seguindo a matriz:\par
 | 0 \~-1 \~ 0 | \par
 | -1\~ 5 \~-1 | \par
 | 0 \~-1 \~ 0 |\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i img} \cell }{- Matriz da imagem a ser alterada \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   132                                          \{\par
  147     // Cria uma matriz para armazenar a imagem original temporariamente\par
  148     Pixel tmp[MAX][MAX];\par
  149 \par
  150     // Copia a imagem original para a tempor\'E1ria\par
  151     copy_img(img, tmp);\par
  152 \par
  153     for (i = 1; i < h - 1; i++)\par
  154         for (j = 1; j < w - 1; j++)\par
  155             img[i][j].r = 5*tmp[i][j].r - tmp[i-1][j].r - tmp[i][j-1].r - tmp[i][j+1].r - tmp[i+1][j].r,\par
  156             img[i][j].g = 5*tmp[i][j].g - tmp[i-1][j].g - tmp[i][j-1].g - tmp[i][j+1].g - tmp[i+1][j].g,\par
  157             img[i][j].b = 5*tmp[i][j].b - tmp[i-1][j].b - tmp[i][j-1].b - tmp[i][j+1].b - tmp[i+1][j].b;\par
  158 \}\par
}
}
{\xe \v img_thresholding\:functions.h}
{\xe \v functions.h\:img_thresholding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void img_thresholding ({\b Pixel}  {\i img}[MAX][MAX])}}
\par
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o de thresholding\par
Binariza a imagem, deixando-a apenas com as cores preta e branca, sem tons de cinza.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i img} \cell }{- Matriz da imagem a ser alterada \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}Cria uma vari\'E1vel para armazenar o valor da cor bin\'E1ria\par
Define a cor m\'E1xima (componente) como 1, literalmente, bin\'E1rizando a imagem \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    69                                            \{\par
   81     int bin_color;\par
   82 \par
   83     for (i = 0; i < h; i++)\par
   84         for (j = 0; j < w; j++)\par
   85             // Percorre cada elemento da matriz imagem e atribui a\par
   86             // bin_color 1 se a m\'E9dia dos 3 componentes (r, g, b) do\par
   87             // pixel for maior ou igual \'E0 metade da cor m\'E1xima, e 0\par
   88             // se a m\'E9dia for menor, atribuindo o mesmo valor a cada um\par
   89             bin_color = (img[i][j].r + img[i][j].g + img[i][j].b)/3 > comp/2,\par
   90             img[i][j].r = bin_color,\par
   91             img[i][j].g = bin_color,\par
   92             img[i][j].b = bin_color;\par
   93 \par
   95     comp = 1;\par
   96 \}\par
}
}
{\xe \v img_uncompress\:functions.h}
{\xe \v functions.h\:img_uncompress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void img_uncompress (char  {\i file}[])}}
\par
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para descomprimir a imagem\par
Essa fun\'E7\'E3o descomprime a imagem utilizando o algoritmo RLE (Run-Length Encoding) de forma reversa, lendo o n\'FAmero n de repeti\'E7\'F5es do pixel (rgb) e repetindo n vezes o pixel na escrita de uma nova imagem (descomprimida).\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file} \cell }{- Nome do arquivo de sa\'EDda \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   619                                  \{\par
  632     // Armazena o n\'FAmero de repeti\'E7\'F5es do pixel\par
  633     int rpt;\par
  634     // Armazena os valores (rgb) do pixel lido\par
  635     Pixel p;\par
  636 \par
  637     strcat(file, "_uncompressed.ppm");\par
  638 \par
  639     // Cria uma vari\'E1vel do tipo arquivo\par
  640     FILE *uncomp_img;\par
  641 \par
  642     // Cria um arquivo com o nome do arquivo + '_compressed.ppm'\par
  643     uncomp_img = fopen(file, "w");\par
  644 \par
  645     // Cria o cabe\'E7alho da imagem ppm\par
  646     fprintf(uncomp_img, "%s\\n", header);\par
  647     // Define a largura e altura da imagem\par
  648     fprintf(uncomp_img, "%i %i\\n", w, h);\par
  649     // Define a cor m\'E1ximo (qualidade) da imagem,\par
  650     fprintf(uncomp_img, "%i\\n", comp);\par
  651 \par
  652     while (fscanf(file_img, "%i(%i %i %i) ", &rpt, &p.r, &p.g, &p.b) != EOF)\par
  653         // L\'EA os valores de rpt e do pixel da imagem at\'E9\par
  654         // que o arquivo comprimido chegue ao final\par
  655         for (i = 0; i < rpt; i++)\par
  656             // Repete rpt vezes o valor do pixel\par
  657             // repetido no arquivo da nova imagem\par
  658             fprintf(uncomp_img, "%i %i %i\\n", p.r, p.g, p.b);\par
  659 \par
  660     // Fecha o arquivo aberto\par
  661     fclose(uncomp_img);\par
  662 \par
  663     // Mostra para o usu\'E1rio o nome da imagem final gerada\par
  664     printf("\\nA imagem foi salva como %s\\n", file);\par
  665 \}}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo libs/global.h\par \pard\plain 
{\tc\tcl2 \v libs/global.h}
{\xe \v libs/global.h}
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Arquivo com as vari\'E1veis globais. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Estruturas de Dados\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Pixel}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b header}\~ "P3"\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
FILE * {\b file_img}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b file_name} [50]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b op} [3]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b w}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b h}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b MAX}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b comp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b i}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b j}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o Detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Arquivo com as vari\'E1veis globais. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Arquivo com todas as constantes, vari\'E1veis e estruturas globais. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es e macros\par
\pard\plain 
{\xe \v header\:global.h}
{\xe \v global.h\:header}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define header\~ "P3"}}
\par
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Define o cabe\'E7alho do arquivo ppm suportado. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Vari\'E1veis\par
\pard\plain 
{\xe \v comp\:global.h}
{\xe \v global.h\:comp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int comp}}
\par
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Armazena a cor m\'E1xima da imagem (qualidade). \par
}}
{\xe \v file_img\:global.h}
{\xe \v global.h\:file_img}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FILE* file_img}}
\par
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Armazena a imagem lida. \par
}}
{\xe \v file_name\:global.h}
{\xe \v global.h\:file_name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char file_name[50]}}
\par
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Armazena o nome final da imagem. \par
}}
{\xe \v h\:global.h}
{\xe \v global.h\:h}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int h}}
\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Armazena a altura da imagem. \par
}}
{\xe \v i\:global.h}
{\xe \v global.h\:i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int i}}
\par
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Iterador prim\'E1rio padr\'E3o. \par
}}
{\xe \v j\:global.h}
{\xe \v global.h\:j}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int j}}
\par
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Iterador secund\'E1rio padr\'E3o.. \par
}}
{\xe \v MAX\:global.h}
{\xe \v global.h\:MAX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int MAX}}
\par
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Armazena o valor m\'E1ximo que a imagem pode assumir. \par
}}
{\xe \v op\:global.h}
{\xe \v global.h\:op}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char op[3]}}
\par
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Armazena a escolha do usu\'E1rio no menu. \par
}}
{\xe \v w\:global.h}
{\xe \v global.h\:w}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int w}}
\par
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Armazena a largura da imagem. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo libs/headers.h\par \pard\plain 
{\tc\tcl2 \v libs/headers.h}
{\xe \v libs/headers.h}
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Arquivo com os prot\'F3tipos das fun\'E7\'F5es. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b build_img} (char file[], {\b Pixel} img[{\b MAX}][{\b MAX}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b choice} ({\b Pixel} img[{\b w}][{\b h}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b manip_ppm} (char file[])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b read_ppm} ({\b Pixel} img[{\b MAX}][{\b MAX}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b skip_comments} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clr_screen} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b error_message} (int type)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b menu} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b copy_img} ({\b Pixel} origin[{\b MAX}][{\b MAX}], {\b Pixel} destiny[{\b MAX}][{\b MAX}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b img_amp} (char file[], int zoom, {\b Pixel} img[{\b MAX}][{\b MAX}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b img_blurring} ({\b Pixel} img[{\b w}][{\b h}]){\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b img_compress} (char file[], {\b Pixel} img[{\b MAX}][{\b MAX}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b img_emboss} ({\b Pixel} img[{\b w}][{\b h}]){\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b img_grayscale} ({\b Pixel} img[{\b w}][{\b h}]){\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b img_info} ({\b Pixel} img[{\b w}][{\b h}]){\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b img_invert_h} ({\b Pixel} img[{\b w}][{\b h}]){\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b img_invert_v} ({\b Pixel} img[{\b w}][{\b h}]){\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b img_negative} ({\b Pixel} img[{\b w}][{\b h}]){\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b img_posterize} ({\b Pixel} img[{\b w}][{\b h}]){\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b img_red} (char file[], int zoom, {\b Pixel} img[{\b MAX}][{\b MAX}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b img_reflect_h} ({\b Pixel} img[{\b MAX}][{\b MAX}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b img_reflect_v} ({\b Pixel} img[{\b MAX}][{\b MAX}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b img_rot_180} ({\b Pixel} img[{\b MAX}][{\b MAX}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b img_rot_left} ({\b Pixel} img[{\b MAX}][{\b MAX}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b img_rot_right} ({\b Pixel} img[{\b MAX}][{\b MAX}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b img_sharpening} ({\b Pixel} img[{\b w}][{\b h}]){\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

void {\b img_thresholding} ({\b Pixel} img[{\b w}][{\b h}]){\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b img_uncompress} (char file[])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o Detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Arquivo com os prot\'F3tipos das fun\'E7\'F5es. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Arquivo com todos os prot\'F3tipos das fun\'E7\'F5es a fim de se evitar erros de declara\'E7\'E3o impl\'EDcita.\par
Obs: As fun\'E7\'F5es est\'E3o separadas por arquivo e organizadas alfabeticamente \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v build_img\:headers.h}
{\xe \v headers.h\:build_img}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void build_img (char  {\i file}[], {\b Pixel}  {\i img}[MAX][MAX])}}
\par
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para criar a imagem\par
Fun\'E7\'E3o que gera uma imagem ppm a partir de uma matriz de Pixels\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file} \cell }{- Nome do arquivo de sa\'EDda \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i img} \cell }{- Matriz da imagem a ser gerada \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    26                                                 \{\par
   37     strcat(strcat(strcat(file, "_"), op), ".ppm");\par
   38 \par
   39     // Cria uma vari\'E1vel do tipo arquivo\par
   40     FILE *img_f;\par
   41     // Cria um arquivo com o nome do arquivo + '_' + opera\'E7\'E3o escolhida\par
   42     img_f = fopen(file, "w");\par
   43 \par
   44     // Cria o cabe\'E7alho da imagem ppm\par
   45     fprintf(img_f, "%s\\n", header);\par
   46     // Define a largura e altura da imagem\par
   47     fprintf(img_f, "%i %i\\n", w, h);\par
   48     // Define a cor m\'E1ximo (qualidade) da imagem\par
   49     fprintf(img_f, "%i\\n", comp);\par
   50 \par
   51     for (i = 0; i < h; i++)\par
   52         for (j = 0; j < w; j++)\par
   53             // Trata erros b\'E1sicos, como de cor negativa e/ou maior que o m\'E1ximo.\par
   54             fprintf(img_f, "%i %i %i\\n",\par
   55             (img[i][j].r > comp) ? comp : (img[i][j].r < 0) ? 0 : img[i][j].r,\par
   56             (img[i][j].g > comp) ? comp : (img[i][j].g < 0) ? 0 : img[i][j].g,\par
   57             (img[i][j].b > comp) ? comp : (img[i][j].b < 0) ? 0 : img[i][j].b);\par
   58 \par
   59     // Fecha o arquivo aberto\par
   60     fclose(img_f);\par
   61 \}\par
}
}
{\xe \v choice\:headers.h}
{\xe \v headers.h\:choice}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void choice ({\b Pixel}  {\i img}[w][h])}}
\par
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Chama a fun\'E7\'E3o de manipula\'E7\'E3o de imagem\par
Fun\'E7\'E3o para verificar a op\'E7\'E3o escolhida no menu e chamar sua respectiva fun\'E7\'E3o.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i img} \cell }{- Imagem a ser alterada \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    15                              \{\par
   26     // Percorre cada elemento de op[] e converte para min\'FAsculo\par
   27     for(i = 0; i < strlen(op); i++)\par
   28         op[i] = tolower(op[i]);\par
   29 \par
   30     if (!strcmp(op, "fim"))\par
   31         // Se a op\'E7\'E3o escolhida foi fim, finaliza o programa\par
   32         return;\par
   33     if (!strcmp(op, "inf")) \{\par
   34         // Se a op\'E7\'E3o escolhida foi inf, chama a fun\'E7\'E3o img_info()\par
   35         printf("Exibindo informa\'E7\'F5es da imagem...\\n");\par
   36         img_info(img);\par
   37     \}else if (!strcmp(op, "neg")) \{\par
   38         // Se a op\'E7\'E3o escolhida foi neg, chama a fun\'E7\'E3o img_negative()\par
   39         printf("Criando o negativo da imagem...\\n");\par
   40         img_negative(img);\par
   41         // Cria um novo arquivo ppm com as altera\'E7\'F5es feitas\par
   42         build_img(file_name, img);\par
   43     \}else if (!strcmp(op, "rlv")) \{\par
   44         // Se a op\'E7\'E3o escolhida foi rlv, chama a fun\'E7\'E3o img_emboss()\par
   45         printf("Executando alto-relevo...\\n");\par
   46         img_emboss(img);\par
   47         // Cria um novo arquivo ppm com as altera\'E7\'F5es feitas\par
   48         build_img(file_name, img);\par
   49     \}else if (!strcmp(op, "pos")) \{\par
   50         // Se a op\'E7\'E3o escolhida foi pos, chama a fun\'E7\'E3o img_posterize()\par
   51         printf("Executando Posteriza\'E7\'E3o...\\n");\par
   52         img_posterize(img);\par
   53         // Cria um novo arquivo ppm com as altera\'E7\'F5es feitas\par
   54         build_img(file_name, img);\par
   55     \}else if (!strcmp(op, "thr")) \{\par
   56         // Se a op\'E7\'E3o escolhida foi thr, chama a fun\'E7\'E3o img_thresholding()\par
   57         printf("Executando thresholding...\\n");\par
   58         img_thresholding(img);\par
   59         // Cria um novo arquivo ppm com as altera\'E7\'F5es feitas\par
   60         build_img(file_name, img);\par
   61     \}else if (!strcmp(op, "peb")) \{\par
   62         // Se a op\'E7\'E3o escolhida foi peb, chama a fun\'E7\'E3o img_grayscale()\par
   63         printf("Deixando em Preto e Branco...\\n");\par
   64         img_grayscale(img);\par
   65         // Cria um novo arquivo ppm com as altera\'E7\'F5es feitas\par
   66         build_img(file_name, img);\par
   67     \}else if (!strcmp(op, "blu")) \{\par
   68         // Se a op\'E7\'E3o escolhida foi blu, chama a fun\'E7\'E3o img_blurring()\par
   69         printf("Executando blurring...\\n");\par
   70         img_blurring(img);\par
   71         // Cria um novo arquivo ppm com as altera\'E7\'F5es feitas\par
   72         build_img(file_name, img);\par
   73     \}else if (!strcmp(op, "sha")) \{\par
   74         // Se a op\'E7\'E3o escolhida foi sha, chama a fun\'E7\'E3o img_sharpening()\par
   75         printf("Executando sharpening...\\n");\par
   76         img_sharpening(img);\par
   77         // Cria um novo arquivo ppm com as altera\'E7\'F5es feitas\par
   78         build_img(file_name, img);\par
   79     \}else if (!strcmp(op, "inv")) \{\par
   80         // Cria uma vari\'E1vel para armazenar a dire\'E7\'E3o da invers\'E3o\par
   81         char dir;\par
   82         // L\'EA a dire\'E7\'E3o da invers\'E3o\par
   83         printf("Digite o tipo de invers\'E3o [h: horizontal ou v: vertical]: ");\par
   84         scanf(" %c", &dir);\par
   85         if(dir == 'h') \{\par
   86             // Se a dire\'E7\'E3o escolhida foi h, chama a fun\'E7\'E3o img_invert_h()\par
   87             img_invert_h(img);\par
   88             // Concatena a opera\'E7\'E3o realizada com "_h"\par
   89             // para alterar o nome do arquivo de sa\'EDda\par
   90             strcat(op, "_h");\par
   91         \}else if(dir == 'v') \{\par
   92             // Se a dire\'E7\'E3o escolhida foi v, chama a fun\'E7\'E3o img_invert_v()\par
   93             img_invert_v(img);\par
   94             // Concatena a opera\'E7\'E3o realizada com "_v"\par
   95             // para alterar o nome do arquivo de sa\'EDda\par
   96             strcat(op, "_v");\par
   97         \}else \{\par
   98             // Se a op\'E7\'E3o escolhida n\'E3o for v\'E1lida, mostra uma mensagem de erro\par
   99             error_message(0);\par
  100             // Recurs\'E3o para ler novamente at\'E9 que a op\'E7\'E3o escolhida seja v\'E1lida\par
  101             choice(img);\par
  102             return;\par
  103         \}\par
  104         printf("Invertendo imagem...\\n");\par
  105         // Cria um novo arquivo ppm com as altera\'E7\'F5es feitas\par
  106         build_img(file_name, img);\par
  107     \}else if (!strcmp(op, "esp")) \{\par
  108         // Cria uma vari\'E1vel para armazenar a dire\'E7\'E3o do espelhamento\par
  109         char dir;\par
  110         // L\'EA a dire\'E7\'E3o do espelhamento\par
  111         printf("Digite o tipo de espelhamento [h: horizontal ou v: vertical]: ");\par
  112         scanf(" %c", &dir);\par
  113         if(dir == 'h') \{\par
  114             // Se a dire\'E7\'E3o escolhida foi h, chama a fun\'E7\'E3o img_reflect_h()\par
  115             img_reflect_h(img);\par
  116             // Concatena a opera\'E7\'E3o realizada com "_h"\par
  117             // para alterar o nome do arquivo de sa\'EDda\par
  118             strcat(op, "_h");\par
  119         \}else if(dir == 'v') \{\par
  120             // Se a dire\'E7\'E3o escolhida foi v, chama a fun\'E7\'E3o img_reflect_v()\par
  121             img_reflect_v(img);\par
  122             // Concatena a opera\'E7\'E3o realizada com "_v"\par
  123             // para alterar o nome do arquivo de sa\'EDda\par
  124             strcat(op, "_v");\par
  125         \}else \{\par
  126             // Se a op\'E7\'E3o escolhida n\'E3o for v\'E1lida, mostra uma mensagem de erro\par
  127             error_message(0);\par
  128             // Recurs\'E3o para ler novamente at\'E9 que a op\'E7\'E3o escolhida seja v\'E1lida\par
  129             choice(img);\par
  130             return;\par
  131         \}\par
  132         printf("Espelhando imagem...\\n");\par
  133         // Cria um novo arquivo ppm com as altera\'E7\'F5es feitas\par
  134         build_img(file_name, img);\par
  135     \}else if (!strcmp(op, "rot")) \{\par
  136         // Cria uma vari\'E1vel para armazenar o \'E2ngulo/dire\'E7\'E3o de rota\'E7\'E3o\par
  137         char ang[3];\par
  138         // L\'EA o \'E2ngulo/dire\'E7\'E3o de rota\'E7\'E3o\par
  139         printf("Digite o tipo de rota\'E7\'E3o [dir, esq, 180]: ");\par
  140         scanf("%s", ang);\par
  141         if(!strcmp(ang, "dir")) \{\par
  142             // Se o \'E2ngulo/dire\'E7\'E3o escolhido for dir, chama a fun\'E7\'E3o img_rot_right()\par
  143             img_rot_right(img);\par
  144         \}else if(!strcmp(ang, "180")) \{\par
  145             // Se o \'E2ngulo/dire\'E7\'E3o escolhido for 180, chama a fun\'E7\'E3o img_rot_180()\par
  146             img_rot_180(img);\par
  147         \}else if(!strcmp(ang, "esq")) \{\par
  148             // Se o \'E2ngulo/dire\'E7\'E3o escolhido for esq, chama a fun\'E7\'E3o img_rot_left()\par
  149             img_rot_left(img);\par
  150         \}else \{\par
  151             // Se o \'E2ngulo/dire\'E7\'E3o escolhido for inv\'E1lido, mostra uma mensagem de erro\par
  152             error_message(0);\par
  153             // Recurs\'E3o para ler novamente at\'E9 que a op\'E7\'E3o escolhida seja v\'E1lida\par
  154             choice(img);\par
  155             return;\par
  156         \}\par
  157         printf("Rotacionando Imagem...\\n");\par
  158         // Concatena a opera\'E7\'E3o realizada com '_' e com o \'E2ngulo/dire\'E7\'E3o\par
  159         // escolhida para alterar o nome do arquivo de sa\'EDda\par
  160         strcat(strcat(op, "_"), ang);\par
  161         // Cria um novo arquivo ppm com as altera\'E7\'F5es feitas\par
  162         build_img(file_name, img);\par
  163     \}else if (!strcmp(op, "amp")) \{\par
  164         // Cria uma vari\'E1vel para armazenar o valor do zoom (amplia\'E7\'E3o)\par
  165         int zoom;\par
  166         // L\'EA o valor do zoom\par
  167         printf("Digite o zoom: ");\par
  168         scanf("%i", &zoom);\par
  169         printf("Ampliando Imagem...\\n");\par
  170         // Chama a fun\'E7\'E3o img_amp(), que j\'E1 cria diretamente uma nova imagem\par
  171         img_amp(file_name, zoom, img);\par
  172     \}else if (!strcmp(op, "red")) \{\par
  173         // Cria uma vari\'E1vel para armazenar o valor do zoom (redu\'E7\'E3o)\par
  174         int zoom;\par
  175         // L\'EA o valor do zoom\par
  176         printf("Digite o zoom: ");\par
  177         scanf("%i", &zoom);\par
  178         // Verifica se o valor informado \'E9 congruente \'E0s dimens\'F5es do arquivo\par
  179         if(h%zoom == 0 && w%zoom == 0) \{\par
  180             // Se for, chama a fun\'E7\'E3o img_red(), que j\'E1 cria diretamente uma nova imagem\par
  181             printf("Reduzindo Imagem...\\n");\par
  182             img_red(file_name, zoom, img);\par
  183         \}else \{\par
  184             // Caso contr\'E1rio, mostra uma mensagem de erro\par
  185             error_message(2);\par
  186             // Recurs\'E3o para ler novamente at\'E9 que a op\'E7\'E3o escolhida seja v\'E1lida\par
  187             choice(img);\par
  188             return;\par
  189         \}\par
  190     \}else if (!strcmp(op, "rle")) \{\par
  191         // Se a op\'E7\'E3o escolhida foi rle (compacta\'E7\'E3o da imagem), chama a fun\'E7\'E3o\par
  192         // img_compress(), que j\'E1 cria diretamente o arquivo de sa\'EDda (compactado)\par
  193         printf("Comprimindo Imagem...\\n");\par
  194         img_compress(file_name, img);\par
  195     \}else \{\par
  196         // Caso o usu\'E1rio tenha escolhido uma op\'E7\'E3o inv\'E1lida, mostra uma mensagem de erro\par
  197         error_message(1);\par
  198         // Recurs\'E3o para ler novamente at\'E9 que a op\'E7\'E3o escolhida seja v\'E1lida\par
  199         choice(img);\par
  200     \}\par
  201 \par
  202     // Mostra para o usu\'E1rio o nome da imagem final gerada\par
  203     printf("\\nA imagem foi salva como %s\\n", file_name);\par
  204 \}\par
}
}
{\xe \v clr_screen\:headers.h}
{\xe \v headers.h\:clr_screen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void clr_screen ()}}
\par
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para limpar a tela\par
Essa fun\'E7\'E3o consegue limpar a tela do console em qualquer SO\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    38                   \{\par
   47     #if defined WIN32\par
   48     system("cls");\par
   49     #else\par
   50     system("clear");\par
   51     #endif\par
   52 \}\par
}
}
{\xe \v copy_img\:headers.h}
{\xe \v headers.h\:copy_img}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void copy_img ({\b Pixel}  {\i origin}[MAX][MAX], {\b Pixel}  {\i destiny}[MAX][MAX])}}
\par
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para copiar a matriz da imagem\par
Fun\'E7\'E3o que copia uma imagem de uma matriz para outra atrav\'E9s da passagem de par\'E2metros por refer\'EAncia\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i origin} \cell }{- Imagem a ser copiada \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i destiny} \cell }{- Imagem para onde ser\'E1 copiada \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     9                                                                \{\par
   21     for (i = 0; i < h; i++)\par
   22         for (j = 0; j < w; j++)\par
   23             destiny[i][j] = origin[i][j];\par
   24 \}\par
}
}
{\xe \v error_message\:headers.h}
{\xe \v headers.h\:error_message}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void error_message (int  {\i type})}}
\par
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para mostrar as mensagens de erro para cada situa\'E7\'E3o\par
Essa fun\'E7\'E3o mostra uma determinada mensagem de erro para cada cada c\'F3digo de erro predefinido.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i type} \cell }{Recebe o tipo (n\'FAmero) do erro \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    54                              \{\par
   65     clr_screen();\par
   66     switch (type) \{\par
   67         // Erro padr\'E3o de op\'E7\'E3o inv\'E1lida\par
   68         case 0:\par
   69             printf("Voc\'EA nao escolheu uma op\'E7\'E3o v\'E1lida. Tente novamente:\\n");\par
   70             break;\par
   71         // Op\'E7\'E3o inv\'E1lida do menu\par
   72         case 1:\par
   73             menu();\par
   74             printf("Voc\'EA n\'E3o escolheu uma op\'E7\'E3o v\'E1lida. Tente novamente:\\n");\par
   75             printf("O que voc\'EA deseja fazer? ");\par
   76             scanf("%s", op);\par
   77             clr_screen();\par
   78             break;\par
   79         // Zoom de redu\'E7\'E3o inv\'E1lida\par
   80         case 2:\par
   81             printf("O zoom de redu\'E7\'E3o deve ser m\'FAltiplo de ambos os lados (%i, %i).\\n", w, h);\par
   82             break;\par
   83         // Erro de abertura de arquivo\par
   84         case 3:\par
   85             printf("Erro ao abrir o arquivo.\\n");\par
   86             break;\par
   87         // Erro desconhecido\par
   88         default:\par
   89             printf("Ocorreu um erro desconhecido.\\n");\par
   90     \}\par
   91 \}\par
}
}
{\xe \v img_amp\:headers.h}
{\xe \v headers.h\:img_amp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void img_amp (char  {\i file}[], int  {\i zoom}, {\b Pixel}  {\i img}[MAX][MAX])}}
\par
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o de amplia\'E7\'E3o da imagem\par
Para ampliar uma imagem n vezes, devemos repetir cada pixel n vezes horizontalmente e tamb\'E9m cada linha n vezes.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file} \cell }{- Nome do arquivo de sa\'EDda \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i zoom} \cell }{- Zoom de amplia\'E7\'E3o da imagem \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i img} \cell }{- Matriz da imagem a ser ampliada \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   227                                                          \{\par
  241     // Iteradores\par
  242     int k, l;\par
  243 \par
  244     strcat(file, "_amp.ppm");\par
  245 \par
  246     // Cria uma vari\'E1vel do tipo arquivo\par
  247     FILE *img_f;\par
  248     // Cria um arquivo com o nome do arquivo + '_amp.ppm'\par
  249     img_f = fopen(file, "w");\par
  250 \par
  251     // Cria o cabe\'E7alho da imagem ppm\par
  252     fprintf(img_f, "%s\\n", header);\par
  253     // Define as novas largura e altura da imagem (multiplicadas pelo zoom)\par
  254     fprintf(img_f, "%i %i\\n", w*zoom, h*zoom);\par
  255     // Define a cor m\'E1ximo (qualidade) da imagem\par
  256     fprintf(img_f, "%i\\n", comp);\par
  257     for (i = 0; i < h; i++)\par
  258         for (k = 0; k < zoom; k++)\par
  259             for (j = 0; j < w; j++)\par
  260                 for (l = 0; l < zoom; l++)\par
  261                     // Trata erros b\'E1sicos, como de cor negativa e/ou maior que o m\'E1ximo.\par
  262                     fprintf(img_f, "%i %i %i\\n",\par
  263                     (img[i][j].r > comp) ? comp : img[i][j].r,\par
  264                     (img[i][j].g > comp) ? comp : img[i][j].g,\par
  265                     (img[i][j].b > comp) ? comp : img[i][j].b);\par
  266 \par
  267     // Fecha o arquivo aberto\par
  268     fclose(img_f);\par
  269 \}\par
}
}
{\xe \v img_compress\:headers.h}
{\xe \v headers.h\:img_compress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void img_compress (char  {\i file}[], {\b Pixel}  {\i img}[MAX][MAX])}}
\par
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para comprimir a imagem\par
Essa fun\'E7\'E3o comprime a imagem utilizando o algoritmo RLE (Run-Length Encoding), que verifica o n\'FAmero de pixels (rgb) repetidos sequencialmente e cria uma nova imagem com a estrutura n (r g b), no qual n representa o n\'FAmero de vezes que esse pixel est\'E1 repetido sequencialmente.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file} \cell }{- Nome do arquivo de sa\'EDda \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i img} \cell }{- Matriz da imagem a ser comprimida \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   554                                                     \{\par
  570     // Cria a vari\'E1vel para contar as repeti\'E7\'F5es (iniciada com 0)\par
  571     int cont = 0;\par
  572     // Cria duas vari\'E1veis do tipo pixel para compara\'E7\'E3o, sendo\par
  573     // a primeira inicializada com o primeiro pixel da imagem\par
  574     Pixel t1 = img[0][0], t2;\par
  575 \par
  576     strcat(file, "_compressed.ppm");\par
  577 \par
  578     // Cria uma vari\'E1vel do tipo arquivo\par
  579     FILE *img_f;\par
  580     // Cria um arquivo com o nome do arquivo + '_compressed.ppm'\par
  581     img_f = fopen(file, "w");\par
  582 \par
  583     // Cria o cabe\'E7alho da imagem ppm\par
  584     fprintf(img_f, "%s\\n", header);\par
  585     // Define a largura e altura da imagem\par
  586     fprintf(img_f, "%i %i\\n", w, h);\par
  587     // Define a cor m\'E1ximo (qualidade) da imagem e p\'F5e um c,\par
  588     // para indicar que o arquivo est\'E1 comprimido\par
  589     fprintf(img_f, "%ic\\n", comp);\par
  590 \par
  591     for (i = 0; i < h; i++)\par
  592         for (j = 0; j < w; j++)\{\par
  593             // Atribui a t2 o conte\'FAdo do "pixel atual" da leitura\par
  594             t2 = img[i][j];\par
  595             if (t1.r == t2.r && t1.g == t2.g && t1.b == t2.b && !(i == h-1 && j == w-1)) \{\par
  596                 // Se todos os componentes (rgb) de t2 forem iguais aos de t1 (pixel anterior)\par
  597                 // e o pixel (i, j) n\'E3o for o \'FAltimo pixel da imagem,\par
  598                 // Incrementa o contador e pula para o pr\'F3ximo pixel (continue)\par
  599                 cont++;\par
  600                 continue;\par
  601             \}\par
  602             if (t1.r == t2.r && t1.g == t2.g && t1.b == t2.b && i == h-1 && j == w-1)\par
  603                 // Se todos os componentes (rgb) de t2 forem iguais aos de t1 (pixel anterior)\par
  604                 // e o pixel (i, j) for o \'FAltimo pixel da imagem, incrementa o contador\par
  605                 cont++;\par
  606             // Escreve no arquivo o valor do contador, seguido dos valores\par
  607             // dos componentes do pixel (que foi repetido contador vezes)\par
  608             fprintf(img_f, "%i(%i %i %i)\\n", cont, t1.r, t1.g, t1.b);\par
  609             // O pixel anterior (de compara\'E7\'E3o) recebe o pixel atual (que\par
  610             // \'E9 diferente do anterior, pois a imagem foi escrita) e a\par
  611             // vari\'E1vel de contador recebe 1 (justamente o pixel t2)\par
  612             t1 = t2, cont = 1;\par
  613         \}\par
  614 \par
  615     // Fecha o arquivo aberto\par
  616     fclose(img_f);\par
  617 \}\par
}
}
{\xe \v img_red\:headers.h}
{\xe \v headers.h\:img_red}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void img_red (char  {\i file}[], int  {\i zoom}, {\b Pixel}  {\i img}[MAX][MAX])}}
\par
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o de redu\'E7\'E3o da imagem\par
Para reduzir uma imagem n vezes (sendo n|h e n|w), devemos atribuir \'E0 cada novo pixel da nova imagem a m\'E9dia dos pixels de subimagens de tamanho n x n da imagem original.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file} \cell }{- Nome do arquivo de sa\'EDda \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i zoom} \cell }{- Zoom de redu\'E7\'E3o da imagem \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i img} \cell }{- Matriz da imagem a ser reduzida \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   271                                                          \{\par
  286     // Iteradores\par
  287     int k, l;\par
  288     // Vari\'E1vel para armazenar o valor da \'E1rea das subimagens\par
  289     int area = zoom*zoom;\par
  290     // Pixel para salvar o valor da soma dos pixels da subimagem\par
  291     Pixel sum = \{0, 0, 0\};\par
  292 \par
  293     strcat(file, "_red.ppm");\par
  294 \par
  295     // Cria uma vari\'E1vel do tipo arquivo\par
  296     FILE *img_f;\par
  297     // Cria um arquivo com o nome do arquivo + '_red.ppm'\par
  298     img_f = fopen(file, "w");\par
  299 \par
  300     // Cria o cabe\'E7alho da imagem ppm\par
  301     fprintf(img_f, "%s\\n", header);\par
  302     // Define as novas largura e altura da imagem (divididas pelo zoom)\par
  303     fprintf(img_f, "%i %i\\n", w/zoom, h/zoom);\par
  304     // Define a cor m\'E1ximo (qualidade) da imagem\par
  305     fprintf(img_f, "%i\\n", comp);\par
  306 \par
  307     for (i = 0; i <= h-zoom; i += zoom)\par
  308         for (j = 0; j <= w-zoom; j += zoom, sum.r = 0, sum.g = 0, sum.b = 0) \{\par
  309             for (k = 0; k < zoom; k++)\par
  310                 for (l = 0; l < zoom; l++)\par
  311                     // Soma \'E0 sum o valor das cores de cada pixel da subimagem\par
  312                     sum.r += img[i+k][j+l].r,\par
  313                     sum.g += img[i+k][j+l].g,\par
  314                     sum.b += img[i+k][j+l].b;\par
  315             // Salva no arquivo o valor de cada pixel de soma dividido pela \'E1rea\par
  316             fprintf(img_f, "%i %i %i\\n",\par
  317             (sum.r/area > comp) ? comp : sum.r/area,\par
  318             (sum.g/area > comp) ? comp : sum.g/area,\par
  319             (sum.b/area > comp) ? comp : sum.b/area);\par
  320         \}\par
  321 \par
  322     // Fecha o arquivo aberto\par
  323     fclose(img_f);\par
  324 \}\par
}
}
{\xe \v img_reflect_h\:headers.h}
{\xe \v headers.h\:img_reflect_h}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void img_reflect_h ({\b Pixel}  {\i img}[MAX][MAX])}}
\par
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para refletir a imagem horizontalmente\par
Essa fun\'E7\'E3o faz com que a imagem fique espelhada horizontalmente, isto \'E9, a imagem \'E9 "normal" at\'E9 a sua metade (horizontal), quando come\'E7a a repetir a imagem, s\'F3 que invertida, criando o efeito de ter colocado um espelho no meio da imagem.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i img} \cell }{- Matriz da imagem a ser refletida horizontalmente \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   510                                         \{\par
  523     for (i = 0; i < h; i++)\par
  524         for (j = 0; j < w; j++)\par
  525             // Atribui a cada elemento (i, largura - j - 1)\par
  526             // o seu "correspondente" (i, j) da imagem\par
  527             img[i][w-j-1] = img[i][j];\par
  528 \}\par
}
}
{\xe \v img_reflect_v\:headers.h}
{\xe \v headers.h\:img_reflect_v}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void img_reflect_v ({\b Pixel}  {\i img}[MAX][MAX])}}
\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para refletir a imagem verticalmente\par
Essa fun\'E7\'E3o faz com que a imagem fique espelhada verticalmente, isto \'E9, a imagem \'E9 "normal" at\'E9 a sua metade (vertical), quando come\'E7a a ser repetida, s\'F3 que invertida, criando o efeito de ter colocado um espelho no meio da imagem.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i img} \cell }{- Matriz da imagem a ser refletida verticalmente \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   530                                         \{\par
  543     for (i = 0; i < h; i++)\par
  544         for (j = 0; j < w; j++)\par
  545             // Atribui a cada elemento (altura - i - 1, j)\par
  546             // o seu "correspondente" (i, j) da imagem\par
  547             img[h-i-1][j] = img[i][j];\par
  548 \}\par
}
}
{\xe \v img_rot_180\:headers.h}
{\xe \v headers.h\:img_rot_180}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void img_rot_180 ({\b Pixel}  {\i img}[MAX][MAX])}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o de rota\'E7\'E3o em 180\'BA\par
Para rotacionar uma imagem em 180\'BA, poder\'EDamos aplicar duas vezes o algoritmo de rota\'E7\'E3o para a esquerda (ou para a direita), no entanto, n\'E3o h\'E1 essa necessidade, pois uma imagem rotacionada em 180\'BA nada mais \'E9 do que uma imagem invertida horizontalmente e verticalmente ao mesmo tempo (flip_h + flip_v). E \'E9 isso que essa fun\'E7\'E3o faz.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i img} \cell }{- Matriz da imagem a ser alterada \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   206                                       \{\par
  221     // Inverte a imagem verticalmente (flip vertical)\par
  222     img_invert_v(img);\par
  223     // Inverte a imagem horizontalmente (flip horizontal)\par
  224     img_invert_h(img);\par
  225 \}\par
}
}
{\xe \v img_rot_left\:headers.h}
{\xe \v headers.h\:img_rot_left}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void img_rot_left ({\b Pixel}  {\i img}[MAX][MAX])}}
\par
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o de rota\'E7\'E3o em 90\'BA para a esquerda\par
Faz a transposta da matriz da imagem e espelha verticalmente\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i img} \cell }{- Matriz da imagem a ser alterada \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   160                                        \{\par
  170     int aux;\par
  171 \par
  172     // Cria uma matriz para armazenar a imagem original temporariamente\par
  173     Pixel tmp[MAX][MAX];\par
  174 \par
  175     // Copia a imagem original para a tempor\'E1ria\par
  176     copy_img(img, tmp);\par
  177 \par
  178     for (i = 0; i < h; i++)\par
  179         for (j = 0; j < w; j++)\par
  180             img[w-j-1][i] = tmp[i][j];\par
  181 \par
  182     // Faz o swap entre h e w, pois ao rotacionar, a altura troca com a largura\par
  183     aux = h, h = w, w = aux;\par
  184 \}\par
}
}
{\xe \v img_rot_right\:headers.h}
{\xe \v headers.h\:img_rot_right}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void img_rot_right ({\b Pixel}  {\i img}[MAX][MAX])}}
\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o de rota\'E7\'E3o em 90\'BA para a direita\par
Se considerarmos o \'E2ngulo de rota\'E7\'E3o para esquerda como x, o \'E2ngulo de rota\'E7\'E3o para esquerda se d\'E1 por x + 180\'BA, portanto, para rotacionar a imagem para esquerda, podemos rotacion\'E1-la para esquerda uma vez e depois rotacionar em 180\'BA. E \'E9 isso que essa fun\'E7\'E3o faz.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i img} \cell }{- Matriz da imagem a ser alterada \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   186                                         \{\par
  200     // Rotaciona a imagem original 1 vez para a esquerda\par
  201     img_rot_left(img);\par
  202     // Rotaciona a imagem original em 180\'BA\par
  203     img_rot_180(img);\par
  204 \}\par
}
}
{\xe \v img_uncompress\:headers.h}
{\xe \v headers.h\:img_uncompress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void img_uncompress (char  {\i file}[])}}
\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para descomprimir a imagem\par
Essa fun\'E7\'E3o descomprime a imagem utilizando o algoritmo RLE (Run-Length Encoding) de forma reversa, lendo o n\'FAmero n de repeti\'E7\'F5es do pixel (rgb) e repetindo n vezes o pixel na escrita de uma nova imagem (descomprimida).\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file} \cell }{- Nome do arquivo de sa\'EDda \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   619                                  \{\par
  632     // Armazena o n\'FAmero de repeti\'E7\'F5es do pixel\par
  633     int rpt;\par
  634     // Armazena os valores (rgb) do pixel lido\par
  635     Pixel p;\par
  636 \par
  637     strcat(file, "_uncompressed.ppm");\par
  638 \par
  639     // Cria uma vari\'E1vel do tipo arquivo\par
  640     FILE *uncomp_img;\par
  641 \par
  642     // Cria um arquivo com o nome do arquivo + '_compressed.ppm'\par
  643     uncomp_img = fopen(file, "w");\par
  644 \par
  645     // Cria o cabe\'E7alho da imagem ppm\par
  646     fprintf(uncomp_img, "%s\\n", header);\par
  647     // Define a largura e altura da imagem\par
  648     fprintf(uncomp_img, "%i %i\\n", w, h);\par
  649     // Define a cor m\'E1ximo (qualidade) da imagem,\par
  650     fprintf(uncomp_img, "%i\\n", comp);\par
  651 \par
  652     while (fscanf(file_img, "%i(%i %i %i) ", &rpt, &p.r, &p.g, &p.b) != EOF)\par
  653         // L\'EA os valores de rpt e do pixel da imagem at\'E9\par
  654         // que o arquivo comprimido chegue ao final\par
  655         for (i = 0; i < rpt; i++)\par
  656             // Repete rpt vezes o valor do pixel\par
  657             // repetido no arquivo da nova imagem\par
  658             fprintf(uncomp_img, "%i %i %i\\n", p.r, p.g, p.b);\par
  659 \par
  660     // Fecha o arquivo aberto\par
  661     fclose(uncomp_img);\par
  662 \par
  663     // Mostra para o usu\'E1rio o nome da imagem final gerada\par
  664     printf("\\nA imagem foi salva como %s\\n", file);\par
  665 \}}
}
{\xe \v manip_ppm\:headers.h}
{\xe \v headers.h\:manip_ppm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void manip_ppm (char  {\i file}[])}}
\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o principal de manipula\'E7\'E3o da imagem\par
Essa fun\'E7\'E3o abre o arquivo PPM e integra todas as outras fun\'E7\'F5es do programa.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file} \cell }{- Nome do arquivo a ser lido \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   265                             \{\par
  276     // Vari\'E1vel para verificar se a imagem lida est\'E1 comprimida\par
  277     char compressed;\par
  278 \par
  279     // Faz uma c\'F3pia do nome do arquivo sem extens\'E3o\par
  280     strcpy(file_name, file);\par
  281 \par
  282     // L\'EA o arquivo ppm (nome lido concatenado com a extens\'E3o ".ppm")\par
  283     file_img = fopen(strcat(file,".ppm"), "r");\par
  284 \par
  285     // Verifica se o arquivo existe\par
  286     if (file_img == NULL) \{\par
  287         // Se n\'E3o existir, mostra uma mensagem de erro e finaliza o programa\par
  288         error_message(3);\par
  289         return;\par
  290     \}\par
  291 \par
  292     // L\'EA o cabe\'E7alho da imagem ignorando coment\'E1rios\par
  293     skip_comments();\par
  294     fscanf(file_img, "P3 ");\par
  295     // L\'EA a largura da imagem ignorando coment\'E1rios\par
  296     skip_comments();\par
  297     fscanf(file_img, "%i ", &w);\par
  298     // L\'EA a altura da imagem ignorando coment\'E1rios\par
  299     skip_comments();\par
  300     fscanf(file_img, "%i ", &h);\par
  301     // L\'EA a cor m\'E1xima (qualidade) da imagem e o caractere de compress\'E3o ignorando coment\'E1rios\par
  302     skip_comments();\par
  303     fscanf(file_img, "%i%c", &comp, &compressed);\par
  304     skip_comments();\par
  305 \par
  306     // Verifica se as vari\'E1veis lidas n\'E3o s\'E3o nulas\par
  307     if (!w || !h || !comp) \{\par
  308         // Se alguma for, mostra uma mensagem de erro, fecha\par
  309         // a leitura do arquivo e finaliza o programa\par
  310         error_message(3);\par
  311         fclose(file_img);\par
  312         return;\par
  313     \}\par
  314 \par
  315     // Define, com uma compara\'E7\'E3o tern\'E1ria, o valor m\'E1ximo de altura/largura\par
  316     // a fim de evitar erros de segmenta\'E7\'E3o (Segmentation fault) na matriz\par
  317     MAX = (w > h) ? w : h;\par
  318 \par
  319     // Cria a imagem como uma matriz de pixels (tamanho MAX x MAX)\par
  320     Pixel image[MAX][MAX];\par
  321 \par
  322     // Verifica se a imagem est\'E1 comprimida\par
  323     if (compressed == 'c') \{\par
  324         // Cria uma vari\'E1vel para armazenar a escolha do usu\'E1rio\par
  325         int c;\par
  326         // L\'EA a escolha do usu\'E1rio\par
  327         printf("A imagem selecionada est\'E1 comprimida.\\n");\par
  328         do \{\par
  329             printf("Deseja descomprimir? [1 - Sim / 0 - N\'E3o] ");\par
  330             scanf("%i", &c);\par
  331         \} while (c != 1 && c != 0);\par
  332         // Verifica se o usu\'E1rio quer descomprimir a imagem\par
  333         if (c)\par
  334             // Chama a fun\'E7\'E3o para descompress\'E3o\par
  335             img_uncompress(file_name);\par
  336         // Fecha a leitura do arquivo e finaliza programa\par
  337         fclose(file_img);\par
  338         return;\par
  339     // Verifica se a imagem n\'E3o est\'E3 comprimida e \'E9 v\'E1lida\par
  340     \}else if (compressed == ' ' || compressed == '\\n') \{\par
  341         // L\'EA a imagem\par
  342         read_ppm(image);\par
  343     // Caso a imagem n\'E3o seja v\'E1lida\par
  344     \}else \{\par
  345         // Mostra uma mensagem de erro, fecha a leitura do arquivo e finaliza o programa\par
  346         error_message(3);\par
  347         fclose(file_img);\par
  348         return;\par
  349     \}\par
  350 \par
  351     // Fecha a leitura do arquivo\par
  352     fclose(file_img);\par
  353 \par
  354     // Mostra o menu de op\'E7\'F5es\par
  355     menu();\par
  356     // L\'EA a op\'E7\'E3o escolhida\par
  357     printf("O que voc\'EA deseja fazer? ");\par
  358     scanf("%s", op);\par
  359     // Limpa a tela\par
  360     clr_screen();\par
  361     // Chama a fun\'E7\'E3o choice() para enviar o usu\'E1rio para a op\'E7\'E3o escolhida\par
  362     choice(image);\par
  363 \}\par
}
}
{\xe \v menu\:headers.h}
{\xe \v headers.h\:menu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void menu ()}}
\par
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para mostrar o menu de op\'E7\'F5es para o usu\'E1rio\par
Essa fun\'E7\'E3o serve apenas para mostrar o menu com as op\'E7\'F5es de manipula\'E7\'E3o de imagem que o usu\'E1rio tem.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     9             \{\par
   19     printf("-------------------- MENU --------------------\\n");\par
   20     printf("'rle' \\t Comprimir imagem usando RLE.\\n");\par
   21     printf("'neg' \\t Criar o negativo da imagem.\\n");\par
   22     printf("'inv' \\t Inverter imagem (flip).\\n");\par
   23     printf("'esp' \\t Espelhar imagem.\\n");\par
   24     printf("'rlv' \\t Deixar imagem em Alto Relevo.\\n");\par
   25     printf("'pos' \\t Posterizar imagem.\\n");\par
   26     printf("'peb' \\t Deixar imagem em Preto e Branco.\\n");\par
   27     printf("'thr' \\t Binarizar imagem usando thresholding.\\n");\par
   28     printf("'blu' \\t Executar blurring.\\n");\par
   29     printf("'sha' \\t Executar sharpening.\\n");\par
   30     printf("'rot' \\t Rotacionar imagem.\\n");\par
   31     printf("'amp' \\t Ampliar imagem.\\n");\par
   32     printf("'red' \\t Reduzir imagem.\\n\\n");\par
   33     printf("'inf' \\t Mostrar informa\'E7\'F5es da imagem.\\n");\par
   34     printf("'fim' \\t Finalizar programa.\\n");\par
   35     printf("----------------------------------------------\\n\\n");\par
   36 \}\par
}
}
{\xe \v read_ppm\:headers.h}
{\xe \v headers.h\:read_ppm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void read_ppm ({\b Pixel}  {\i img}[MAX][MAX])}}
\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
L\'EA o arquivo PPM\par
Fun\'E7\'E3o para ler as cores do arquivo da imagem e salv\'E1-la em uma matriz.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i img} \cell }{- Matriz onde ser\'E1 salva a imagem \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   241                                    \{\par
  252     for (i = 0; i < h; i++)\par
  253         for (j = 0; j < w; j++) \{\par
  254             // L\'EA cada elemento da imagem e salva na matriz img,\par
  255             // sempre chamando a fun\'E7\'E3o para ignorar os coment\'E1rios\par
  256             fscanf(file_img, "%i ", &img[i][j].r);\par
  257             skip_comments();\par
  258             fscanf(file_img, "%i ", &img[i][j].g);\par
  259             skip_comments();\par
  260             fscanf(file_img, "%i ", &img[i][j].b);\par
  261             skip_comments();\par
  262         \}\par
  263 \}\par
}
}
{\xe \v skip_comments\:headers.h}
{\xe \v headers.h\:skip_comments}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void skip_comments ()}}
\par
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ignora os coment\'E1rios da imagem\par
Fun\'E7\'E3o para ignorar os coment\'E1rios da imagem durante a sua leitura.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   206                      \{\par
  216     // Cria uma vari\'E1vel para armazenar cada caracter do coment\'E1rio\par
  217     char buffer = fgetc(file_img);\par
  218 \par
  219     // Repete o la\'E7o enquanto a vari\'E1vel de buffer for igual a um '#'\par
  220     do \{\par
  221         if (buffer == '#')\par
  222             // Se buffer for igual a '#', \'E9 por que est\'E1 iniciando\par
  223             // um coment\'E1rio, ent\'E3o a vari\'E1vel buffer recebe cada\par
  224             // caractere at\'E9 que ele seja uma quebra de linha\par
  225             while (buffer != '\\n')\par
  226                 buffer = fgetc(file_img);\par
  227         else\par
  228             // Caso contr\'E1rio, n\'E3o \'E9 um coment\'E1rio, ent\'E3o "devolve"\par
  229             // para o arquivo, para que ele possa ser lido novamente\par
  230             ungetc(buffer, file_img);\par
  231         // buffer pega novamente um caracter (para verificar\par
  232         // se tem mais algum coment\'E1rio no arquivo)\par
  233         buffer = fgetc(file_img);\par
  234     \} while (buffer == '#');\par
  235     // Quando o la\'E7o acabar (o \'FAltimo caracter pego for\par
  236     // diferente de um '#'), "devolve" para o arquivo o\par
  237     // caracter que est\'E1 em buffer, pois n\'E3o \'E9 um coment\'E1rio\par
  238     ungetc(buffer, file_img);\par
  239 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo libs/img_manip.h\par \pard\plain 
{\tc\tcl2 \v libs/img_manip.h}
{\xe \v libs/img_manip.h}
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Arquivo com as fun\'E7\'F5es principais do programa. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "global.h"}\par
{\f2 #include "headers.h"}\par
{\f2 #include "visual.h"}\par
{\f2 #include "functions.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b choice} ({\b Pixel} img[{\b w}][{\b h}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b skip_comments} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b read_ppm} ({\b Pixel} img[{\b MAX}][{\b MAX}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b manip_ppm} (char file[])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o Detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Arquivo com as fun\'E7\'F5es principais do programa. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Arquivo com todas as constantes, vari\'E1veis e estruturas globais. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v choice\:img_manip.h}
{\xe \v img_manip.h\:choice}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void choice ({\b Pixel}  {\i img}[w][h])}}
\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Chama a fun\'E7\'E3o de manipula\'E7\'E3o de imagem\par
Fun\'E7\'E3o para verificar a op\'E7\'E3o escolhida no menu e chamar sua respectiva fun\'E7\'E3o.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i img} \cell }{- Imagem a ser alterada \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    15                              \{\par
   26     // Percorre cada elemento de op[] e converte para min\'FAsculo\par
   27     for(i = 0; i < strlen(op); i++)\par
   28         op[i] = tolower(op[i]);\par
   29 \par
   30     if (!strcmp(op, "fim"))\par
   31         // Se a op\'E7\'E3o escolhida foi fim, finaliza o programa\par
   32         return;\par
   33     if (!strcmp(op, "inf")) \{\par
   34         // Se a op\'E7\'E3o escolhida foi inf, chama a fun\'E7\'E3o img_info()\par
   35         printf("Exibindo informa\'E7\'F5es da imagem...\\n");\par
   36         img_info(img);\par
   37     \}else if (!strcmp(op, "neg")) \{\par
   38         // Se a op\'E7\'E3o escolhida foi neg, chama a fun\'E7\'E3o img_negative()\par
   39         printf("Criando o negativo da imagem...\\n");\par
   40         img_negative(img);\par
   41         // Cria um novo arquivo ppm com as altera\'E7\'F5es feitas\par
   42         build_img(file_name, img);\par
   43     \}else if (!strcmp(op, "rlv")) \{\par
   44         // Se a op\'E7\'E3o escolhida foi rlv, chama a fun\'E7\'E3o img_emboss()\par
   45         printf("Executando alto-relevo...\\n");\par
   46         img_emboss(img);\par
   47         // Cria um novo arquivo ppm com as altera\'E7\'F5es feitas\par
   48         build_img(file_name, img);\par
   49     \}else if (!strcmp(op, "pos")) \{\par
   50         // Se a op\'E7\'E3o escolhida foi pos, chama a fun\'E7\'E3o img_posterize()\par
   51         printf("Executando Posteriza\'E7\'E3o...\\n");\par
   52         img_posterize(img);\par
   53         // Cria um novo arquivo ppm com as altera\'E7\'F5es feitas\par
   54         build_img(file_name, img);\par
   55     \}else if (!strcmp(op, "thr")) \{\par
   56         // Se a op\'E7\'E3o escolhida foi thr, chama a fun\'E7\'E3o img_thresholding()\par
   57         printf("Executando thresholding...\\n");\par
   58         img_thresholding(img);\par
   59         // Cria um novo arquivo ppm com as altera\'E7\'F5es feitas\par
   60         build_img(file_name, img);\par
   61     \}else if (!strcmp(op, "peb")) \{\par
   62         // Se a op\'E7\'E3o escolhida foi peb, chama a fun\'E7\'E3o img_grayscale()\par
   63         printf("Deixando em Preto e Branco...\\n");\par
   64         img_grayscale(img);\par
   65         // Cria um novo arquivo ppm com as altera\'E7\'F5es feitas\par
   66         build_img(file_name, img);\par
   67     \}else if (!strcmp(op, "blu")) \{\par
   68         // Se a op\'E7\'E3o escolhida foi blu, chama a fun\'E7\'E3o img_blurring()\par
   69         printf("Executando blurring...\\n");\par
   70         img_blurring(img);\par
   71         // Cria um novo arquivo ppm com as altera\'E7\'F5es feitas\par
   72         build_img(file_name, img);\par
   73     \}else if (!strcmp(op, "sha")) \{\par
   74         // Se a op\'E7\'E3o escolhida foi sha, chama a fun\'E7\'E3o img_sharpening()\par
   75         printf("Executando sharpening...\\n");\par
   76         img_sharpening(img);\par
   77         // Cria um novo arquivo ppm com as altera\'E7\'F5es feitas\par
   78         build_img(file_name, img);\par
   79     \}else if (!strcmp(op, "inv")) \{\par
   80         // Cria uma vari\'E1vel para armazenar a dire\'E7\'E3o da invers\'E3o\par
   81         char dir;\par
   82         // L\'EA a dire\'E7\'E3o da invers\'E3o\par
   83         printf("Digite o tipo de invers\'E3o [h: horizontal ou v: vertical]: ");\par
   84         scanf(" %c", &dir);\par
   85         if(dir == 'h') \{\par
   86             // Se a dire\'E7\'E3o escolhida foi h, chama a fun\'E7\'E3o img_invert_h()\par
   87             img_invert_h(img);\par
   88             // Concatena a opera\'E7\'E3o realizada com "_h"\par
   89             // para alterar o nome do arquivo de sa\'EDda\par
   90             strcat(op, "_h");\par
   91         \}else if(dir == 'v') \{\par
   92             // Se a dire\'E7\'E3o escolhida foi v, chama a fun\'E7\'E3o img_invert_v()\par
   93             img_invert_v(img);\par
   94             // Concatena a opera\'E7\'E3o realizada com "_v"\par
   95             // para alterar o nome do arquivo de sa\'EDda\par
   96             strcat(op, "_v");\par
   97         \}else \{\par
   98             // Se a op\'E7\'E3o escolhida n\'E3o for v\'E1lida, mostra uma mensagem de erro\par
   99             error_message(0);\par
  100             // Recurs\'E3o para ler novamente at\'E9 que a op\'E7\'E3o escolhida seja v\'E1lida\par
  101             choice(img);\par
  102             return;\par
  103         \}\par
  104         printf("Invertendo imagem...\\n");\par
  105         // Cria um novo arquivo ppm com as altera\'E7\'F5es feitas\par
  106         build_img(file_name, img);\par
  107     \}else if (!strcmp(op, "esp")) \{\par
  108         // Cria uma vari\'E1vel para armazenar a dire\'E7\'E3o do espelhamento\par
  109         char dir;\par
  110         // L\'EA a dire\'E7\'E3o do espelhamento\par
  111         printf("Digite o tipo de espelhamento [h: horizontal ou v: vertical]: ");\par
  112         scanf(" %c", &dir);\par
  113         if(dir == 'h') \{\par
  114             // Se a dire\'E7\'E3o escolhida foi h, chama a fun\'E7\'E3o img_reflect_h()\par
  115             img_reflect_h(img);\par
  116             // Concatena a opera\'E7\'E3o realizada com "_h"\par
  117             // para alterar o nome do arquivo de sa\'EDda\par
  118             strcat(op, "_h");\par
  119         \}else if(dir == 'v') \{\par
  120             // Se a dire\'E7\'E3o escolhida foi v, chama a fun\'E7\'E3o img_reflect_v()\par
  121             img_reflect_v(img);\par
  122             // Concatena a opera\'E7\'E3o realizada com "_v"\par
  123             // para alterar o nome do arquivo de sa\'EDda\par
  124             strcat(op, "_v");\par
  125         \}else \{\par
  126             // Se a op\'E7\'E3o escolhida n\'E3o for v\'E1lida, mostra uma mensagem de erro\par
  127             error_message(0);\par
  128             // Recurs\'E3o para ler novamente at\'E9 que a op\'E7\'E3o escolhida seja v\'E1lida\par
  129             choice(img);\par
  130             return;\par
  131         \}\par
  132         printf("Espelhando imagem...\\n");\par
  133         // Cria um novo arquivo ppm com as altera\'E7\'F5es feitas\par
  134         build_img(file_name, img);\par
  135     \}else if (!strcmp(op, "rot")) \{\par
  136         // Cria uma vari\'E1vel para armazenar o \'E2ngulo/dire\'E7\'E3o de rota\'E7\'E3o\par
  137         char ang[3];\par
  138         // L\'EA o \'E2ngulo/dire\'E7\'E3o de rota\'E7\'E3o\par
  139         printf("Digite o tipo de rota\'E7\'E3o [dir, esq, 180]: ");\par
  140         scanf("%s", ang);\par
  141         if(!strcmp(ang, "dir")) \{\par
  142             // Se o \'E2ngulo/dire\'E7\'E3o escolhido for dir, chama a fun\'E7\'E3o img_rot_right()\par
  143             img_rot_right(img);\par
  144         \}else if(!strcmp(ang, "180")) \{\par
  145             // Se o \'E2ngulo/dire\'E7\'E3o escolhido for 180, chama a fun\'E7\'E3o img_rot_180()\par
  146             img_rot_180(img);\par
  147         \}else if(!strcmp(ang, "esq")) \{\par
  148             // Se o \'E2ngulo/dire\'E7\'E3o escolhido for esq, chama a fun\'E7\'E3o img_rot_left()\par
  149             img_rot_left(img);\par
  150         \}else \{\par
  151             // Se o \'E2ngulo/dire\'E7\'E3o escolhido for inv\'E1lido, mostra uma mensagem de erro\par
  152             error_message(0);\par
  153             // Recurs\'E3o para ler novamente at\'E9 que a op\'E7\'E3o escolhida seja v\'E1lida\par
  154             choice(img);\par
  155             return;\par
  156         \}\par
  157         printf("Rotacionando Imagem...\\n");\par
  158         // Concatena a opera\'E7\'E3o realizada com '_' e com o \'E2ngulo/dire\'E7\'E3o\par
  159         // escolhida para alterar o nome do arquivo de sa\'EDda\par
  160         strcat(strcat(op, "_"), ang);\par
  161         // Cria um novo arquivo ppm com as altera\'E7\'F5es feitas\par
  162         build_img(file_name, img);\par
  163     \}else if (!strcmp(op, "amp")) \{\par
  164         // Cria uma vari\'E1vel para armazenar o valor do zoom (amplia\'E7\'E3o)\par
  165         int zoom;\par
  166         // L\'EA o valor do zoom\par
  167         printf("Digite o zoom: ");\par
  168         scanf("%i", &zoom);\par
  169         printf("Ampliando Imagem...\\n");\par
  170         // Chama a fun\'E7\'E3o img_amp(), que j\'E1 cria diretamente uma nova imagem\par
  171         img_amp(file_name, zoom, img);\par
  172     \}else if (!strcmp(op, "red")) \{\par
  173         // Cria uma vari\'E1vel para armazenar o valor do zoom (redu\'E7\'E3o)\par
  174         int zoom;\par
  175         // L\'EA o valor do zoom\par
  176         printf("Digite o zoom: ");\par
  177         scanf("%i", &zoom);\par
  178         // Verifica se o valor informado \'E9 congruente \'E0s dimens\'F5es do arquivo\par
  179         if(h%zoom == 0 && w%zoom == 0) \{\par
  180             // Se for, chama a fun\'E7\'E3o img_red(), que j\'E1 cria diretamente uma nova imagem\par
  181             printf("Reduzindo Imagem...\\n");\par
  182             img_red(file_name, zoom, img);\par
  183         \}else \{\par
  184             // Caso contr\'E1rio, mostra uma mensagem de erro\par
  185             error_message(2);\par
  186             // Recurs\'E3o para ler novamente at\'E9 que a op\'E7\'E3o escolhida seja v\'E1lida\par
  187             choice(img);\par
  188             return;\par
  189         \}\par
  190     \}else if (!strcmp(op, "rle")) \{\par
  191         // Se a op\'E7\'E3o escolhida foi rle (compacta\'E7\'E3o da imagem), chama a fun\'E7\'E3o\par
  192         // img_compress(), que j\'E1 cria diretamente o arquivo de sa\'EDda (compactado)\par
  193         printf("Comprimindo Imagem...\\n");\par
  194         img_compress(file_name, img);\par
  195     \}else \{\par
  196         // Caso o usu\'E1rio tenha escolhido uma op\'E7\'E3o inv\'E1lida, mostra uma mensagem de erro\par
  197         error_message(1);\par
  198         // Recurs\'E3o para ler novamente at\'E9 que a op\'E7\'E3o escolhida seja v\'E1lida\par
  199         choice(img);\par
  200     \}\par
  201 \par
  202     // Mostra para o usu\'E1rio o nome da imagem final gerada\par
  203     printf("\\nA imagem foi salva como %s\\n", file_name);\par
  204 \}\par
}
}
{\xe \v manip_ppm\:img_manip.h}
{\xe \v img_manip.h\:manip_ppm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void manip_ppm (char  {\i file}[])}}
\par
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o principal de manipula\'E7\'E3o da imagem\par
Essa fun\'E7\'E3o abre o arquivo PPM e integra todas as outras fun\'E7\'F5es do programa.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file} \cell }{- Nome do arquivo a ser lido \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   265                             \{\par
  276     // Vari\'E1vel para verificar se a imagem lida est\'E1 comprimida\par
  277     char compressed;\par
  278 \par
  279     // Faz uma c\'F3pia do nome do arquivo sem extens\'E3o\par
  280     strcpy(file_name, file);\par
  281 \par
  282     // L\'EA o arquivo ppm (nome lido concatenado com a extens\'E3o ".ppm")\par
  283     file_img = fopen(strcat(file,".ppm"), "r");\par
  284 \par
  285     // Verifica se o arquivo existe\par
  286     if (file_img == NULL) \{\par
  287         // Se n\'E3o existir, mostra uma mensagem de erro e finaliza o programa\par
  288         error_message(3);\par
  289         return;\par
  290     \}\par
  291 \par
  292     // L\'EA o cabe\'E7alho da imagem ignorando coment\'E1rios\par
  293     skip_comments();\par
  294     fscanf(file_img, "P3 ");\par
  295     // L\'EA a largura da imagem ignorando coment\'E1rios\par
  296     skip_comments();\par
  297     fscanf(file_img, "%i ", &w);\par
  298     // L\'EA a altura da imagem ignorando coment\'E1rios\par
  299     skip_comments();\par
  300     fscanf(file_img, "%i ", &h);\par
  301     // L\'EA a cor m\'E1xima (qualidade) da imagem e o caractere de compress\'E3o ignorando coment\'E1rios\par
  302     skip_comments();\par
  303     fscanf(file_img, "%i%c", &comp, &compressed);\par
  304     skip_comments();\par
  305 \par
  306     // Verifica se as vari\'E1veis lidas n\'E3o s\'E3o nulas\par
  307     if (!w || !h || !comp) \{\par
  308         // Se alguma for, mostra uma mensagem de erro, fecha\par
  309         // a leitura do arquivo e finaliza o programa\par
  310         error_message(3);\par
  311         fclose(file_img);\par
  312         return;\par
  313     \}\par
  314 \par
  315     // Define, com uma compara\'E7\'E3o tern\'E1ria, o valor m\'E1ximo de altura/largura\par
  316     // a fim de evitar erros de segmenta\'E7\'E3o (Segmentation fault) na matriz\par
  317     MAX = (w > h) ? w : h;\par
  318 \par
  319     // Cria a imagem como uma matriz de pixels (tamanho MAX x MAX)\par
  320     Pixel image[MAX][MAX];\par
  321 \par
  322     // Verifica se a imagem est\'E1 comprimida\par
  323     if (compressed == 'c') \{\par
  324         // Cria uma vari\'E1vel para armazenar a escolha do usu\'E1rio\par
  325         int c;\par
  326         // L\'EA a escolha do usu\'E1rio\par
  327         printf("A imagem selecionada est\'E1 comprimida.\\n");\par
  328         do \{\par
  329             printf("Deseja descomprimir? [1 - Sim / 0 - N\'E3o] ");\par
  330             scanf("%i", &c);\par
  331         \} while (c != 1 && c != 0);\par
  332         // Verifica se o usu\'E1rio quer descomprimir a imagem\par
  333         if (c)\par
  334             // Chama a fun\'E7\'E3o para descompress\'E3o\par
  335             img_uncompress(file_name);\par
  336         // Fecha a leitura do arquivo e finaliza programa\par
  337         fclose(file_img);\par
  338         return;\par
  339     // Verifica se a imagem n\'E3o est\'E3 comprimida e \'E9 v\'E1lida\par
  340     \}else if (compressed == ' ' || compressed == '\\n') \{\par
  341         // L\'EA a imagem\par
  342         read_ppm(image);\par
  343     // Caso a imagem n\'E3o seja v\'E1lida\par
  344     \}else \{\par
  345         // Mostra uma mensagem de erro, fecha a leitura do arquivo e finaliza o programa\par
  346         error_message(3);\par
  347         fclose(file_img);\par
  348         return;\par
  349     \}\par
  350 \par
  351     // Fecha a leitura do arquivo\par
  352     fclose(file_img);\par
  353 \par
  354     // Mostra o menu de op\'E7\'F5es\par
  355     menu();\par
  356     // L\'EA a op\'E7\'E3o escolhida\par
  357     printf("O que voc\'EA deseja fazer? ");\par
  358     scanf("%s", op);\par
  359     // Limpa a tela\par
  360     clr_screen();\par
  361     // Chama a fun\'E7\'E3o choice() para enviar o usu\'E1rio para a op\'E7\'E3o escolhida\par
  362     choice(image);\par
  363 \}\par
}
}
{\xe \v read_ppm\:img_manip.h}
{\xe \v img_manip.h\:read_ppm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void read_ppm ({\b Pixel}  {\i img}[MAX][MAX])}}
\par
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
L\'EA o arquivo PPM\par
Fun\'E7\'E3o para ler as cores do arquivo da imagem e salv\'E1-la em uma matriz.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i img} \cell }{- Matriz onde ser\'E1 salva a imagem \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   241                                    \{\par
  252     for (i = 0; i < h; i++)\par
  253         for (j = 0; j < w; j++) \{\par
  254             // L\'EA cada elemento da imagem e salva na matriz img,\par
  255             // sempre chamando a fun\'E7\'E3o para ignorar os coment\'E1rios\par
  256             fscanf(file_img, "%i ", &img[i][j].r);\par
  257             skip_comments();\par
  258             fscanf(file_img, "%i ", &img[i][j].g);\par
  259             skip_comments();\par
  260             fscanf(file_img, "%i ", &img[i][j].b);\par
  261             skip_comments();\par
  262         \}\par
  263 \}\par
}
}
{\xe \v skip_comments\:img_manip.h}
{\xe \v img_manip.h\:skip_comments}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void skip_comments ()}}
\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ignora os coment\'E1rios da imagem\par
Fun\'E7\'E3o para ignorar os coment\'E1rios da imagem durante a sua leitura.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid   206                      \{\par
  216     // Cria uma vari\'E1vel para armazenar cada caracter do coment\'E1rio\par
  217     char buffer = fgetc(file_img);\par
  218 \par
  219     // Repete o la\'E7o enquanto a vari\'E1vel de buffer for igual a um '#'\par
  220     do \{\par
  221         if (buffer == '#')\par
  222             // Se buffer for igual a '#', \'E9 por que est\'E1 iniciando\par
  223             // um coment\'E1rio, ent\'E3o a vari\'E1vel buffer recebe cada\par
  224             // caractere at\'E9 que ele seja uma quebra de linha\par
  225             while (buffer != '\\n')\par
  226                 buffer = fgetc(file_img);\par
  227         else\par
  228             // Caso contr\'E1rio, n\'E3o \'E9 um coment\'E1rio, ent\'E3o "devolve"\par
  229             // para o arquivo, para que ele possa ser lido novamente\par
  230             ungetc(buffer, file_img);\par
  231         // buffer pega novamente um caracter (para verificar\par
  232         // se tem mais algum coment\'E1rio no arquivo)\par
  233         buffer = fgetc(file_img);\par
  234     \} while (buffer == '#');\par
  235     // Quando o la\'E7o acabar (o \'FAltimo caracter pego for\par
  236     // diferente de um '#'), "devolve" para o arquivo o\par
  237     // caracter que est\'E1 em buffer, pois n\'E3o \'E9 um coment\'E1rio\par
  238     ungetc(buffer, file_img);\par
  239 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo libs/visual.h\par \pard\plain 
{\tc\tcl2 \v libs/visual.h}
{\xe \v libs/visual.h}
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Arquivo com fun\'E7\'F5es apenas de impress\'E3o na tela. }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b menu} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clr_screen} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b error_message} (int type)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o Detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Arquivo com fun\'E7\'F5es apenas de impress\'E3o na tela. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Arquivo com as fun\'E7\'F5es de mostrar o menu, limpar tela, e mensagens de erro. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v clr_screen\:visual.h}
{\xe \v visual.h\:clr_screen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void clr_screen ()}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para limpar a tela\par
Essa fun\'E7\'E3o consegue limpar a tela do console em qualquer SO\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    38                   \{\par
   47     #if defined WIN32\par
   48     system("cls");\par
   49     #else\par
   50     system("clear");\par
   51     #endif\par
   52 \}\par
}
}
{\xe \v error_message\:visual.h}
{\xe \v visual.h\:error_message}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void error_message (int  {\i type})}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para mostrar as mensagens de erro para cada situa\'E7\'E3o\par
Essa fun\'E7\'E3o mostra uma determinada mensagem de erro para cada cada c\'F3digo de erro predefinido.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i type} \cell }{Recebe o tipo (n\'FAmero) do erro \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    54                              \{\par
   65     clr_screen();\par
   66     switch (type) \{\par
   67         // Erro padr\'E3o de op\'E7\'E3o inv\'E1lida\par
   68         case 0:\par
   69             printf("Voc\'EA nao escolheu uma op\'E7\'E3o v\'E1lida. Tente novamente:\\n");\par
   70             break;\par
   71         // Op\'E7\'E3o inv\'E1lida do menu\par
   72         case 1:\par
   73             menu();\par
   74             printf("Voc\'EA n\'E3o escolheu uma op\'E7\'E3o v\'E1lida. Tente novamente:\\n");\par
   75             printf("O que voc\'EA deseja fazer? ");\par
   76             scanf("%s", op);\par
   77             clr_screen();\par
   78             break;\par
   79         // Zoom de redu\'E7\'E3o inv\'E1lida\par
   80         case 2:\par
   81             printf("O zoom de redu\'E7\'E3o deve ser m\'FAltiplo de ambos os lados (%i, %i).\\n", w, h);\par
   82             break;\par
   83         // Erro de abertura de arquivo\par
   84         case 3:\par
   85             printf("Erro ao abrir o arquivo.\\n");\par
   86             break;\par
   87         // Erro desconhecido\par
   88         default:\par
   89             printf("Ocorreu um erro desconhecido.\\n");\par
   90     \}\par
   91 \}\par
}
}
{\xe \v menu\:visual.h}
{\xe \v visual.h\:menu}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void menu ()}}
\par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para mostrar o menu de op\'E7\'F5es para o usu\'E1rio\par
Essa fun\'E7\'E3o serve apenas para mostrar o menu com as op\'E7\'F5es de manipula\'E7\'E3o de imagem que o usu\'E1rio tem.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid Nada\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     9             \{\par
   19     printf("-------------------- MENU --------------------\\n");\par
   20     printf("'rle' \\t Comprimir imagem usando RLE.\\n");\par
   21     printf("'neg' \\t Criar o negativo da imagem.\\n");\par
   22     printf("'inv' \\t Inverter imagem (flip).\\n");\par
   23     printf("'esp' \\t Espelhar imagem.\\n");\par
   24     printf("'rlv' \\t Deixar imagem em Alto Relevo.\\n");\par
   25     printf("'pos' \\t Posterizar imagem.\\n");\par
   26     printf("'peb' \\t Deixar imagem em Preto e Branco.\\n");\par
   27     printf("'thr' \\t Binarizar imagem usando thresholding.\\n");\par
   28     printf("'blu' \\t Executar blurring.\\n");\par
   29     printf("'sha' \\t Executar sharpening.\\n");\par
   30     printf("'rot' \\t Rotacionar imagem.\\n");\par
   31     printf("'amp' \\t Ampliar imagem.\\n");\par
   32     printf("'red' \\t Reduzir imagem.\\n\\n");\par
   33     printf("'inf' \\t Mostrar informa\'E7\'F5es da imagem.\\n");\par
   34     printf("'fim' \\t Finalizar programa.\\n");\par
   35     printf("----------------------------------------------\\n\\n");\par
   36 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo main.c\par \pard\plain 
{\tc\tcl2 \v main.c}
{\xe \v main.c}
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Arquivo principal. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include <ctype.h>}\par
{\f2 #include "libs/img_manip.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o Detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Arquivo principal. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Arquivo que \'E9 compilado e executado\par
Includes \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v main\:main.c}
{\xe \v main.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main ()}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Biblioteca de fun\'E7\'F5es de entrada/sa\'EDda Biblioteca de fun\'E7\'F5es padr\'E3o Biblioteca de fun\'E7\'F5es com strings Biblioteca de fun\'E7\'F5es \'FAteis \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Fun\'E7\'E3o para receber o arquivo \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Retorna:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 0\par
}}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid    21            \{\par
   27     // Armazena o nome do arquivo a ser lido\par
   28     char file[50];\par
   29     // Armazena a escolha do usu\'E1rio de continuar ou n\'E3o\par
   30     int alive;\par
   31 \par
   32     // Loop para poder executar o programa at\'E9 que o usu\'E1rio decida parar\par
   33     do \{\par
   34         // Limpa a tela\par
   35         clr_screen();\par
   36 \par
   37         printf("Digite o nome do arquivo a ser lido (sem extens\'E3o): ");\par
   38         // Recebe o nome do arquivo\par
   39         scanf("%s", file);\par
   40 \par
   41         // Processa a imagem\par
   42         manip_ppm(file);\par
   43 \par
   44         // Loop para receber a resposta do usu\'E1rio\par
   45         do \{\par
   46             printf("\\nFazer outra manipula\'E7\'E3o? [1 - Sim | 0 - N\'E3o] ");\par
   47             // Recebe a resposta do usu\'E1rio\par
   48             scanf("%i", &alive);\par
   49         \} while (alive != 0 && alive != 1);\par
   50 \par
   51     \} while (alive);\par
   52 \par
   53     // Mensagem de programa finalizado\par
   54     printf("\\nPrograma finalizado.\\n");\par
   55 \par
   56     return 0;\par
   57 \}\par
}
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \'CDndice\par 
\pard\plain 
{\tc \v \'CDndice}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}